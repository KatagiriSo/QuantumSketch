/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Config.ts":
/*!***********************!*\
  !*** ./src/Config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config)\n/* harmony export */ });\nvar config = {\n    /// lattice size\n    scale: 15,\n    log: \"VER\",\n};\n\n\n//# sourceURL=webpack://rdfeyn/./src/Config.ts?");

/***/ }),

/***/ "./src/Core/Elem.ts":
/*!**************************!*\
  !*** ./src/Core/Elem.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getElemID\": () => (/* binding */ getElemID)\n/* harmony export */ });\nvar elemIDCounter = 0;\n// ElemIDCounter is a global variable that is used to generate unique IDs for\nfunction getElemID() {\n    var id = \"\".concat(elemIDCounter);\n    elemIDCounter++;\n    return id;\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/Elem.ts?");

/***/ }),

/***/ "./src/Core/Group.ts":
/*!***************************!*\
  !*** ./src/Core/Group.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Group\": () => (/* binding */ Group),\n/* harmony export */   \"isGroup\": () => (/* binding */ isGroup)\n/* harmony export */ });\n/* harmony import */ var _Elem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Elem */ \"./src/Core/Elem.ts\");\n/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Loop */ \"./src/Core/Loop.ts\");\n/* harmony import */ var _MyString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MyString */ \"./src/Core/MyString.ts\");\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Vector */ \"./src/Core/Vector.ts\");\n\n\n\n\nvar Group = /** @class */ (function () {\n    function Group(elements) {\n        this.shape = \"Group\";\n        this.elements = [];\n        this.id = (0,_Elem__WEBPACK_IMPORTED_MODULE_0__.getElemID)();\n        this.elements = elements;\n    }\n    Group.prototype.first = function () {\n        if (this.elements.length === 0) {\n            return undefined;\n        }\n        return this.elements[0];\n    };\n    Group.prototype.formalDistance = function (point) {\n        if (this.elements.length === 0) {\n            return Infinity;\n        }\n        var minDistance = Infinity;\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n            var elem = _a[_i];\n            var distance = elem.formalDistance(point);\n            if (distance < minDistance) {\n                minDistance = distance;\n            }\n        }\n        return minDistance;\n    };\n    Group.prototype.move = function (delta) {\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n            var elem = _a[_i];\n            elem.move(delta);\n        }\n    };\n    Group.prototype.copy = function () {\n        var elementsCopy = [];\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n            var elem = _a[_i];\n            elementsCopy.push(elem.copy());\n        }\n        return new Group(elementsCopy);\n    };\n    Group.prototype.moveAbsolute = function (location) {\n        if (this.elements.length === 0) {\n            return;\n        }\n        var first = this.elements[0];\n        if ((0,_Vector__WEBPACK_IMPORTED_MODULE_3__.isVector)(first)) {\n            var delta = location.minus(first);\n            this.move(delta);\n        }\n        else if ((0,_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(first)) {\n            var delta = location.minus(first.origin);\n            this.move(delta);\n        }\n        else if ((0,_MyString__WEBPACK_IMPORTED_MODULE_2__.isString)(first)) {\n            var delta = location.minus(first.origin);\n            this.move(delta);\n        }\n        else if (isGroup(first)) {\n            first.moveAbsolute(location);\n        }\n        else {\n        }\n    };\n    Group.prototype.description = function () {\n        var desc = \"\".concat(this.shape, \" id:\").concat(this.id, \" elements:\");\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n            var elem = _a[_i];\n            desc += elem.description() + \" \";\n        }\n        return desc;\n    };\n    Group.prototype.save = function () {\n        var saveData = {};\n        saveData[\"id\"] = this.id;\n        saveData[\"shape\"] = this.shape;\n        saveData[\"elements\"] = [];\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\n            var elem = _a[_i];\n            saveData[\"elements\"].push(elem.save());\n        }\n        return saveData;\n    };\n    return Group;\n}());\n\nfunction isGroup(elem) {\n    return elem.shape == \"Group\";\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/Group.ts?");

/***/ }),

/***/ "./src/Core/Line.ts":
/*!**************************!*\
  !*** ./src/Core/Line.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Line\": () => (/* binding */ Line),\n/* harmony export */   \"isLine\": () => (/* binding */ isLine),\n/* harmony export */   \"makeLine\": () => (/* binding */ makeLine)\n/* harmony export */ });\n/* harmony import */ var _Elem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Elem */ \"./src/Core/Elem.ts\");\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Vector */ \"./src/Core/Vector.ts\");\n\n\n// wave https://stackoverflow.com/questions/29917446/drawing-sine-wave-in-canvas\n/**\n * A Line is a Elem that is a line.\n * It has a label, a style, and a labelDiff.\n * It can be rotated, and it can be toggled.\n * It can be copied, and it can be saved to a JSON object.\n * It can also be described as a string.\n */\nvar Line = /** @class */ (function () {\n    function Line(label, style) {\n        this.shape = \"Line\";\n        this.label = \"\";\n        this.style = \"normal\";\n        this.labelDiff = 0;\n        this.allow = true;\n        this.origin = new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n        this.to = new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n        this.control = null;\n        this.arrowRotation = 0;\n        this.id = (0,_Elem__WEBPACK_IMPORTED_MODULE_0__.getElemID)();\n        if (label) {\n            this.label = label;\n        }\n        if (style) {\n            this.style = style;\n        }\n    }\n    Line.prototype.save = function () {\n        var saveData = {};\n        saveData[\"id\"] = this.id;\n        saveData[\"label\"] = this.label;\n        saveData[\"style\"] = this.style;\n        saveData[\"allow\"] = this.allow;\n        saveData[\"origin\"] = this.origin.save();\n        saveData[\"to\"] = this.to.save();\n        saveData[\"control\"] = this.control ? this.control.save() : null;\n        saveData[\"arrowRotation\"] = this.arrowRotation;\n        return saveData;\n    };\n    Line.prototype.copy = function () {\n        var line = new Line();\n        line.label = this.label;\n        line.style = this.style;\n        line.labelDiff = line.labelDiff;\n        line.allow = this.allow;\n        line.origin = this.origin.copy();\n        line.to = this.to.copy();\n        line.control = this.control ? this.control.copy() : null;\n        line.arrowRotation = this.arrowRotation;\n        return line;\n    };\n    Line.prototype.rotation = function (angle) {\n        var centerOrigin = this.center();\n        var unitVec = this.directionUnit();\n        var length = this.length();\n        var rotatedUnitVec = unitVec.rotation(angle);\n        this.origin = centerOrigin.add(rotatedUnitVec.multi(-length / 2));\n        this.to = centerOrigin.add(rotatedUnitVec.multi(length / 2));\n    };\n    Line.prototype.move = function (delta) {\n        this.origin = this.origin.add(delta);\n        this.to = this.to.add(delta);\n    };\n    Line.prototype.moveAbsolute = function (location) {\n        var length = this.length();\n        var unitVec = this.directionUnit();\n        this.origin = location.add(unitVec.multi(-length / 2));\n        this.to = location.add(unitVec.multi(+length / 2));\n    };\n    Line.prototype.length = function () {\n        return this.to.minus(this.origin).length();\n    };\n    Line.prototype.toggle = function () {\n        var o = this.origin;\n        this.origin = this.to;\n        this.to = o;\n    };\n    Line.prototype.direction = function () {\n        return this.to.minus(this.origin);\n    };\n    Line.prototype.directionUnit = function () {\n        return this.direction().multi(1 / this.length());\n    };\n    Line.prototype.addLoopOrigin = function (loop) {\n        loop.origin = this.origin.minus(this.directionUnit().multi(loop.radius));\n    };\n    Line.prototype.addLoopTo = function (loop) {\n        loop.origin = this.to.add(this.directionUnit().multi(loop.radius));\n    };\n    Line.prototype.between = function (loop1, loop2) {\n        this.to = loop1.origin.copy();\n        this.origin = loop2.origin.copy();\n        loop1.addLineTo(this);\n        loop2.addLineOrigin(this);\n    };\n    Line.prototype.center = function () {\n        if (this.control) {\n            return this.pointAt(0.5);\n        }\n        return this.origin.add(this.to).multi(1 / 2);\n    };\n    Line.prototype.formalDistance = function (point) {\n        var closest = this.closestPoint(point);\n        return point.minus(closest).length();\n        // let toLength = this.to.minus(point).length()\n        // let originLength = this.origin.minus(point).length()\n        // if (toLength < originLength) {\n        //     if (toLength > 2) {\n        //         return toLength\n        //     }\n        //     return toLength + 1\n        // }\n        // if (originLength > 2) {\n        //     return originLength\n        // }\n        // return originLength + 1\n    };\n    Line.prototype.vector = function () {\n        return this.to.minus(this.origin);\n    };\n    Line.prototype.description = function () {\n        return \"\".concat(this.shape, \" id:\").concat(this.id, \" (\").concat(this.origin.x, \",\").concat(this.origin.y, \") -> (\").concat(this.to.x, \", \").concat(this.to.y, \") stayle:\").concat(this.style);\n    };\n    Line.prototype.closestPoint = function (point) {\n        if (!this.control) {\n            var direction = this.direction();\n            var lengthSquared = direction.prod(direction);\n            if (lengthSquared === 0) {\n                return this.origin.copy();\n            }\n            var t = Math.max(0, Math.min(1, point\n                .minus(this.origin)\n                .prod(direction) / lengthSquared));\n            return new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(this.origin.x + direction.x * t, this.origin.y + direction.y * t);\n        }\n        var closest = this.origin.copy();\n        var minDistance = Number.POSITIVE_INFINITY;\n        var segments = 64;\n        for (var i = 0; i <= segments; i++) {\n            var t = i / segments;\n            var sample = this.pointAt(t);\n            var distance = point.minus(sample).length();\n            if (distance < minDistance) {\n                minDistance = distance;\n                closest = sample;\n            }\n        }\n        return closest;\n    };\n    Line.prototype.pointAt = function (t) {\n        t = Math.max(0, Math.min(1, t));\n        if (this.control) {\n            var oneMinusT = 1 - t;\n            var term1 = this.origin.multi(oneMinusT * oneMinusT);\n            var term2 = this.control.multi(2 * oneMinusT * t);\n            var term3 = this.to.multi(t * t);\n            return term1.add(term2).add(term3);\n        }\n        return this.origin.add(this.direction().multi(t));\n    };\n    Line.prototype.tangentAt = function (t) {\n        t = Math.max(0, Math.min(1, t));\n        if (this.control) {\n            var term1 = this.control.minus(this.origin).multi(2 * (1 - t));\n            var term2 = this.to.minus(this.control).multi(2 * t);\n            return term1.add(term2);\n        }\n        return this.direction();\n    };\n    return Line;\n}());\n\nfunction isLine(elem) {\n    return elem.shape == \"Line\";\n}\nfunction makeLine(data) {\n    var _a, _b;\n    var shape = data[\"shape\"];\n    if (shape) {\n        return undefined;\n    }\n    var elm = new Line(undefined, undefined);\n    elm.id = data[\"id\"];\n    elm.label = data[\"label\"];\n    elm.style = data[\"style\"];\n    elm.allow = data[\"allow\"];\n    elm.labelDiff = data[\"labelDiff\"];\n    elm.origin = (_a = (0,_Vector__WEBPACK_IMPORTED_MODULE_1__.makeVector)(data[\"origin\"])) !== null && _a !== void 0 ? _a : new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n    elm.to = (_b = (0,_Vector__WEBPACK_IMPORTED_MODULE_1__.makeVector)(data[\"to\"])) !== null && _b !== void 0 ? _b : new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n    var control = (0,_Vector__WEBPACK_IMPORTED_MODULE_1__.makeVector)(data[\"control\"]);\n    elm.control = control !== null && control !== void 0 ? control : null;\n    var arrowRotation = data[\"arrowRotation\"];\n    elm.arrowRotation = typeof arrowRotation === \"number\" ? arrowRotation : 0;\n    return elm;\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/Line.ts?");

/***/ }),

/***/ "./src/Core/Loop.ts":
/*!**************************!*\
  !*** ./src/Core/Loop.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Loop\": () => (/* binding */ Loop),\n/* harmony export */   \"isLoop\": () => (/* binding */ isLoop),\n/* harmony export */   \"makeLoop\": () => (/* binding */ makeLoop)\n/* harmony export */ });\n/* harmony import */ var _Elem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Elem */ \"./src/Core/Elem.ts\");\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Vector */ \"./src/Core/Vector.ts\");\n\n\n/**\n * A Loop is a Line that is a loop.\n * It has a radius, and a begin and end angle.\n * It can be copied, and it can be saved to a JSON object.\n * It can also be described as a string.\n */\nvar Loop = /** @class */ (function () {\n    function Loop(label, origin) {\n        this.shape = \"Loop\";\n        this.style = \"normal\";\n        this.allow = false;\n        this.fill = false;\n        this.origin = new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n        this.radius = 1;\n        this.label = \"\";\n        this.labels = [];\n        this.loopBeginAngle = 0;\n        this.loopEndAngle = Math.PI * 2;\n        this.id = (0,_Elem__WEBPACK_IMPORTED_MODULE_0__.getElemID)();\n        if (label) {\n            this.label = label;\n        }\n        if (origin) {\n            this.origin = origin;\n        }\n    }\n    Loop.prototype.save = function () {\n        var saveData = {};\n        saveData[\"id\"] = this.id;\n        saveData[\"label\"] = this.label;\n        saveData[\"labels\"] = this.labels;\n        saveData[\"shape\"] = this.shape;\n        saveData[\"style\"] = this.style;\n        saveData[\"allow\"] = this.allow;\n        saveData[\"fill\"] = this.fill;\n        saveData[\"origin\"] = this.origin.save();\n        saveData[\"radius\"] = this.radius;\n        saveData[\"loopBeginAngle\"] = this.loopBeginAngle;\n        saveData[\"loopEndAngle\"] = this.loopEndAngle;\n        return saveData;\n    };\n    Loop.prototype.copy = function () {\n        var loop = new Loop();\n        loop.fill = this.fill;\n        loop.origin = this.origin;\n        loop.radius = this.radius;\n        loop.label = this.label;\n        loop.labels = this.labels;\n        loop.style = this.style;\n        loop.loopBeginAngle = this.loopBeginAngle;\n        loop.loopEndAngle = this.loopEndAngle;\n        return loop;\n    };\n    Loop.prototype.setLoopBeginAngle = function (angle) {\n        if (angle >= 2 * Math.PI)\n            angle -= 2 * Math.PI;\n        if (angle < 0.0)\n            angle += 2 * Math.PI;\n        this.loopBeginAngle = angle;\n    };\n    Loop.prototype.setLoopEndAngle = function (angle) {\n        if (angle >= 2 * Math.PI)\n            angle -= 2 * Math.PI;\n        if (angle < 0)\n            angle += 2 * Math.PI;\n        this.loopEndAngle = angle;\n    };\n    Loop.prototype.setRadius = function (radius) {\n        if (radius < 1)\n            radius = 1;\n        this.radius = radius;\n    };\n    Loop.prototype.move = function (delta) {\n        this.origin = this.origin.add(delta);\n    };\n    Loop.prototype.moveAbsolute = function (location) {\n        this.origin = location;\n    };\n    Loop.prototype.rotation = function (delta) {\n        this.setLoopBeginAngle(this.loopBeginAngle + delta);\n        this.setLoopEndAngle(this.loopEndAngle + delta);\n    };\n    Loop.prototype.addLineTo = function (line) {\n        line.to = this.origin.add((0,_Vector__WEBPACK_IMPORTED_MODULE_1__.direction)(line.origin, this.origin).unit().multi(this.radius));\n    };\n    Loop.prototype.addLineOrigin = function (line) {\n        line.origin = this.origin.add((0,_Vector__WEBPACK_IMPORTED_MODULE_1__.direction)(line.to, this.origin).unit().multi(this.radius));\n    };\n    Loop.prototype.addLoop = function (loop) {\n        loop.origin = this.origin.add((0,_Vector__WEBPACK_IMPORTED_MODULE_1__.direction)(loop.origin, this.origin).unit().multi(this.radius));\n    };\n    Loop.prototype.formalDistance = function (point) {\n        var length = this.origin.minus(point).length();\n        if (length < this.radius) {\n            return 0;\n        }\n        return Number.MAX_VALUE;\n    };\n    Loop.prototype.description = function () {\n        return \"\".concat(this.shape, \" id:\").concat(this.id, \" (\").concat(this.origin.x, \",\").concat(this.origin.y, \") radius = \").concat(this.radius, \" angle = (\").concat(this.loopBeginAngle * (360 / (2 * Math.PI)), \", \").concat(this.loopEndAngle * (360 / (2 * Math.PI)), \") stayle:\").concat(this.style);\n    };\n    return Loop;\n}());\n\nfunction isLoop(elem) {\n    return elem.shape == \"Loop\";\n}\nfunction makeLoop(data) {\n    var _a;\n    var shape = data[\"shape\"];\n    if (shape) {\n        return undefined;\n    }\n    var elm = new Loop(undefined, undefined);\n    elm.id = data[\"id\"];\n    elm.label = data[\"label\"];\n    elm.style = data[\"style\"];\n    elm.allow = data[\"allow\"];\n    elm.fill = data[\"fill\"];\n    elm.origin = (_a = (0,_Vector__WEBPACK_IMPORTED_MODULE_1__.makeVector)(data[\"origin\"])) !== null && _a !== void 0 ? _a : new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n    elm.loopBeginAngle = data[\"loopBeginAngle\"];\n    elm.loopEndAngle = data[\"loopEndAngle\"];\n    return elm;\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/Loop.ts?");

/***/ }),

/***/ "./src/Core/MyString.ts":
/*!******************************!*\
  !*** ./src/Core/MyString.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MyString\": () => (/* binding */ MyString),\n/* harmony export */   \"isString\": () => (/* binding */ isString),\n/* harmony export */   \"makeMyString\": () => (/* binding */ makeMyString)\n/* harmony export */ });\n/* harmony import */ var _Elem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Elem */ \"./src/Core/Elem.ts\");\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Vector */ \"./src/Core/Vector.ts\");\n\n\n/**\n * A MyString is a String that can be moved around the screen.\n * It has a unique ID, a Shape, and a location.\n * It can be moved by a delta, or moved to an absolute location.\n * It can be copied, and it can be saved to a JSON object.\n * It can also be described as a string.\n */\nvar MyString = /** @class */ (function () {\n    function MyString(label) {\n        this.shape = \"String\";\n        this.origin = new _Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n        this.id = (0,_Elem__WEBPACK_IMPORTED_MODULE_0__.getElemID)();\n        this.label = label;\n    }\n    MyString.prototype.save = function () {\n        var saveData = {};\n        saveData[\"id\"] = this.id;\n        saveData[\"label\"] = this.label;\n        saveData[\"shape\"] = this.shape;\n        saveData[\"origin\"] = this.origin.save();\n        return saveData;\n    };\n    MyString.prototype.copy = function () {\n        var str = new MyString(this.label);\n        str.origin = this.origin;\n        return str;\n    };\n    MyString.prototype.move = function (delta) {\n        this.origin = this.origin.add(delta);\n    };\n    MyString.prototype.moveAbsolute = function (location) {\n        this.origin = location;\n    };\n    MyString.prototype.formalDistance = function (point) {\n        return this.origin.minus(point).length();\n    };\n    MyString.prototype.description = function () {\n        return \"\".concat(this.shape, \" id:\").concat(this.id, \" x:\").concat(this.origin.x, \" y:\").concat(this.origin.y, \" label:\").concat(this.label);\n    };\n    return MyString;\n}());\n\nfunction isString(elem) {\n    return elem.shape == \"String\";\n}\nfunction makeMyString(data) {\n    var shape = data[\"shape\"];\n    if (shape) {\n        return undefined;\n    }\n    var elm = new MyString(\"\");\n    elm.id = data[\"id\"];\n    elm.label = data[\"label\"];\n    return elm;\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/MyString.ts?");

/***/ }),

/***/ "./src/Core/TextPosition.ts":
/*!**********************************!*\
  !*** ./src/Core/TextPosition.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"textPosition\": () => (/* binding */ textPosition)\n/* harmony export */ });\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector */ \"./src/Core/Vector.ts\");\n\n/**\n * Position of text\n */\nfunction textPosition(text, position, config) {\n    //TODO\n    return position.add(new _Vector__WEBPACK_IMPORTED_MODULE_0__.Vector(-3, +3)); // font 仮定\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/TextPosition.ts?");

/***/ }),

/***/ "./src/Core/Vector.ts":
/*!****************************!*\
  !*** ./src/Core/Vector.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector\": () => (/* binding */ Vector),\n/* harmony export */   \"direction\": () => (/* binding */ direction),\n/* harmony export */   \"isVector\": () => (/* binding */ isVector),\n/* harmony export */   \"makeVector\": () => (/* binding */ makeVector)\n/* harmony export */ });\n/* harmony import */ var _Elem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Elem */ \"./src/Core/Elem.ts\");\n\n/**\n * A Vector is a point in 2D space.\n * It has a unique ID, a Shape, and a location.\n * It can be moved by a delta, or moved to an absolute location.\n * It can be copied, and it can be saved to a JSON object.\n * It can also be described as a string.\n * It can be added to another Vector, or subtracted from another Vector.\n * It can be multiplied by a number.\n * It can be rotated by an angle.\n * It can be converted to a unit vector.\n * It can be converted to a floor vector.\n * It can be converted to a vector with integer coordinates.\n */\nvar Vector = /** @class */ (function () {\n    function Vector(x, y) {\n        this.shape = \"Point\";\n        this.x = 0;\n        this.y = 0;\n        this.id = (0,_Elem__WEBPACK_IMPORTED_MODULE_0__.getElemID)();\n        this.x = x;\n        this.y = y;\n    }\n    Vector.prototype.save = function () {\n        var saveData = {};\n        saveData[\"id\"] = this.id;\n        saveData[\"shape\"] = this.shape;\n        saveData[\"x\"] = this.x;\n        saveData[\"y\"] = this.x;\n        return saveData;\n    };\n    Vector.prototype.add = function (vec) {\n        return new Vector(this.x + vec.x, this.y + vec.y);\n    };\n    Vector.prototype.minus = function (vec) {\n        return new Vector(this.x - vec.x, this.y - vec.y);\n    };\n    Vector.prototype.length = function () {\n        return Math.pow((Math.pow(this.x, 2) + Math.pow(this.y, 2)), (1 / 2));\n    };\n    Vector.prototype.multi = function (num) {\n        return new Vector(this.x * num, this.y * num);\n    };\n    Vector.prototype.floor = function () {\n        return new Vector(Math.floor(this.x), Math.floor(this.y));\n    };\n    Vector.prototype.prod = function (vec) {\n        return this.x * vec.x + this.y * vec.y;\n    };\n    Vector.prototype.unit = function () {\n        return new Vector(this.x * (1 / this.length()), this.y * (1 / this.length()));\n    };\n    Vector.prototype.copy = function () {\n        return new Vector(this.x, this.y);\n    };\n    Vector.prototype.rotation = function (angle) {\n        return new Vector(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    };\n    Vector.prototype.formalDistance = function (point) {\n        return (length = this.minus(point).length());\n        // if (length > 0.3) {\n        //   return Number.MAX_VALUE;\n        // }\n        // return 0;\n    };\n    Vector.prototype.move = function (delta) {\n        var vector = this.add(delta);\n        this.x = vector.x;\n        this.y = vector.y;\n    };\n    Vector.prototype.moveAbsolute = function (location) {\n        this.x = location.x;\n        this.y = location.y;\n    };\n    Vector.prototype.description = function () {\n        return \"\".concat(this.shape, \" id:\").concat(this.id, \" x:\").concat(this.x, \" y:\").concat(this.y);\n    };\n    return Vector;\n}());\n\nfunction isVector(elem) {\n    return elem.shape == \"Point\";\n}\nfunction direction(v1, v2) {\n    return v1.minus(v2);\n}\nfunction makeVector(data) {\n    var shape = data[\"shape\"];\n    if (shape) {\n        return undefined;\n    }\n    var elm = new Vector(0, 0);\n    elm.id = data[\"id\"];\n    elm.x = data[\"x\"];\n    elm.y = data[\"y\"];\n    return elm;\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/Vector.ts?");

/***/ }),

/***/ "./src/Core/Vertex.ts":
/*!****************************!*\
  !*** ./src/Core/Vertex.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vertex\": () => (/* binding */ Vertex)\n/* harmony export */ });\n/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loop */ \"./src/Core/Loop.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * A vertex is a loop with a radius of 0.3.\n */\nvar Vertex = /** @class */ (function (_super) {\n    __extends(Vertex, _super);\n    function Vertex() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.fill = true;\n        _this.radius = 0.3;\n        return _this;\n    }\n    return Vertex;\n}(_Loop__WEBPACK_IMPORTED_MODULE_0__.Loop));\n\n\n\n//# sourceURL=webpack://rdfeyn/./src/Core/Vertex.ts?");

/***/ }),

/***/ "./src/UI/CommandRegistry.ts":
/*!***********************************!*\
  !*** ./src/UI/CommandRegistry.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CommandRegistry\": () => (/* binding */ CommandRegistry)\n/* harmony export */ });\n/**\n * Central registry for UI commands. The registry knows how to add, retrieve,\n * and execute command definitions, enabling us to keep the main UI class\n * focused on high-level orchestration instead of switch statements.\n */\nvar CommandRegistry = /** @class */ (function () {\n    function CommandRegistry() {\n        this.commands = new Map();\n    }\n    CommandRegistry.prototype.register = function (command) {\n        this.commands.set(command.id, command);\n    };\n    /**\n     * Executes a command if it has been registered. Returns `false` when a\n     * command identifier is unknown so callers can decide how to react.\n     */\n    CommandRegistry.prototype.execute = function (id, host, pointer) {\n        var command = this.commands.get(id);\n        if (!command) {\n            return false;\n        }\n        if (command.requiresPointer && !pointer) {\n            throw new Error(\"Command '\".concat(id, \"' requires a pointer position.\"));\n        }\n        command.execute({ host: host, pointer: pointer });\n        return true;\n    };\n    CommandRegistry.prototype.list = function () {\n        return Array.from(this.commands.values());\n    };\n    return CommandRegistry;\n}());\n\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/CommandRegistry.ts?");

/***/ }),

/***/ "./src/UI/DrawContext.ts":
/*!*******************************!*\
  !*** ./src/UI/DrawContext.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DrawContext\": () => (/* binding */ DrawContext)\n/* harmony export */ });\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Config */ \"./src/Config.ts\");\n/* harmony import */ var _Core_Vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Vector */ \"./src/Core/Vector.ts\");\n/* harmony import */ var _looger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../looger */ \"./src/looger.ts\");\n/* harmony import */ var _UIColor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UIColor */ \"./src/UI/UIColor.ts\");\n\n\n\n\n/**\n * DrawContext\n *\n * This class is used to draw on canvas.\n */\nvar DrawContext = /** @class */ (function () {\n    function DrawContext(context) {\n        this.exportType = \"canvas\";\n        this.exportString = \"\";\n        this.coordinate = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0);\n        this.scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        this.canvasContext = context;\n        this.canvasContext.font = \"25px Arial\";\n    }\n    /**\n     * output is used to output the result of drawing.\n     */\n    DrawContext.prototype.output = function (desc, exportType, id) {\n        if (this.exportType == \"canvas\") {\n            if (id == \"sub\") {\n                var selector = document.querySelector(\"div#sub\");\n                selector.textContent = desc;\n                return;\n            }\n            if (id == \"current\") {\n                var selector = document.querySelector(\"div#current\");\n                selector.textContent = desc;\n                return;\n            }\n            if (id == \"mode\") {\n                var selector = document.querySelector(\"div#mode\");\n                selector.textContent = desc;\n                return;\n            }\n        }\n    };\n    /**\n     * set the color of stroke.\n     */\n    DrawContext.prototype.setStrokeColor = function (color) {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.strokeStyle = (0,_UIColor__WEBPACK_IMPORTED_MODULE_3__.getColor)(color);\n            return;\n        }\n    };\n    /**\n     * set the color of fill.\n     */\n    DrawContext.prototype.setFillColor = function (color) {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.fillStyle = (0,_UIColor__WEBPACK_IMPORTED_MODULE_3__.getColor)(color);\n            return;\n        }\n    };\n    /**\n     * set export type.\n     */\n    DrawContext.prototype.setExportType = function (exportType) {\n        this.exportType = exportType;\n        if (exportType == \"canvas\") {\n            this.scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        }\n        if (exportType == \"tikz\") {\n            this.scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale / _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        }\n        if (exportType == \"svg\") {\n            this.scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        }\n    };\n    /**\n     * begin path.\n     */\n    DrawContext.prototype.beginPath = function () {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.beginPath();\n            return;\n        }\n    };\n    /**\n     * move to a point.\n     */\n    DrawContext.prototype.moveTo = function (x, y) {\n        this.coordinate = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(x, y);\n    };\n    /**\n     * close path.\n     */\n    DrawContext.prototype.closePath = function () {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.closePath();\n            return;\n        }\n    };\n    // setLineDash(style: LineStyle) {\n    //     loggerVer(\"setLineDash:\" + style)\n    //     this.lineDashStyle = style\n    // }\n    // setLoopDash(style: LineStyle) {\n    //     loggerVer(\"setLoopDash:\" + style)\n    //     this.loopDashStyle = style\n    // }\n    /**\n     * add string for export.\n     */\n    DrawContext.prototype.addExport = function (txt) {\n        this.exportString += txt;\n    };\n    /**\n     * set line into point (x,y).\n     */\n    DrawContext.prototype.lineTo = function (x, y_, linestyle) {\n        if (this.exportType == \"canvas\") {\n            var y = y_;\n            if (linestyle == \"dash\") {\n                this.canvasContext.setLineDash([2, 2]);\n            }\n            else {\n                this.canvasContext.setLineDash([]);\n            }\n            this.canvasContext.moveTo(this.coordinate.x * this.scale, this.coordinate.y * this.scale);\n            this.canvasContext.lineTo(x * this.scale, y * this.scale);\n            this.coordinate = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(x, y);\n            return;\n        }\n        if (this.exportType == \"tikz\") {\n            var y = -y_;\n            if (linestyle == \"wave\") {\n                this.addExport(\"\\\\draw [snake=snake, segment amplitude=0.2mm,segment length=1mm](\".concat(this.coordinate.x, \",\").concat(-this.coordinate.y, \") -- (\").concat(x, \",\").concat(y, \");\\n\"));\n                return;\n            }\n            if (linestyle == \"coil\") {\n                // コイル線のパラメータ\n                var segmentLength = 1.0;\n                var aspect = 0.9;\n                var amplitude = 0.5;\n                var from = void 0, to = void 0;\n                var pathLength = void 0;\n                from = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(this.coordinate.x, -this.coordinate.y);\n                to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(x, -y_);\n                pathLength = to.minus(from).length();\n                // 経路の長さが1波長(segmentLength)よりも短い場合、線の装飾をしない。\n                if (pathLength < segmentLength) {\n                    this.addExport(\"\\\\draw(\".concat(from.x, \",\").concat(from.y, \") -- (\").concat(to.x, \",\").concat(to.y, \");\\n\"));\n                }\n                else {\n                    var n = void 0;\n                    var coilNTimesLength = void 0;\n                    var effectiveSegmentLength = void 0;\n                    n = Math.floor(pathLength / segmentLength);\n                    coilNTimesLength =\n                        2 * aspect * amplitude + (n - 1 / 2) * segmentLength;\n                    effectiveSegmentLength =\n                        segmentLength + (pathLength - coilNTimesLength) / (n - 1 / 2);\n                    this.addExport(\"\\\\draw[decorate, decoration={coil,\" +\n                        \"amplitude = \".concat(amplitude, \"mm,\") +\n                        \"segment length = \".concat(effectiveSegmentLength, \"mm,\") +\n                        \"aspect = \".concat(aspect) +\n                        \"}]\" +\n                        \"(\".concat(from.x, \",\").concat(from.y, \") -- (\").concat(to.x, \",\").concat(to.y, \");\\n\"));\n                }\n                return;\n            }\n            if (linestyle == \"dash\") {\n                this.addExport(\"\\\\draw [dashed](\".concat(this.coordinate.x, \",\").concat(-this.coordinate\n                    .y, \") -- (\").concat(x, \",\").concat(y, \");\\n\"));\n            }\n            else {\n                this.addExport(\"\\\\draw (\".concat(this.coordinate.x, \",\").concat(-this.coordinate\n                    .y, \") -- (\").concat(x, \",\").concat(y, \");\\n\"));\n            }\n            this.coordinate = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(x, y_);\n            return;\n        }\n        if (this.exportType === \"svg\") {\n            var dash = \"\";\n            if (linestyle === \"dash\") {\n                dash = 'stroke-dasharray=\"4\"';\n            }\n            this.addExport(\"<line x1=\\\"\".concat(this.coordinate.x * this.scale, \"\\\" y1=\\\"\").concat(this.coordinate.y * this.scale, \"\\\" x2=\\\"\").concat(x * this.scale, \"\\\" y2=\\\"\").concat(y_ * this.scale, \"\\\" stroke=\\\"black\\\" \").concat(dash, \"/>\"));\n            this.coordinate = new _Core_Vector__WEBPACK_IMPORTED_MODULE_1__.Vector(x, y_);\n            return;\n        }\n    };\n    // fill() {\n    //     if (this.exportType == \"canvas\") {\n    //         this.canvasContext.fill()\n    //         return\n    //     }\n    // }\n    /**\n     * fill rectangle.\n     */\n    DrawContext.prototype.fillRect = function (x, y_, w, h) {\n        if (this.exportType == \"canvas\") {\n            var y = y_;\n            // loggerVer(`fillRect${x} ${y} ${w} ${h}`);\n            this.canvasContext.fillRect(x * this.scale, y * this.scale, w * this.scale, h * this.scale);\n            return;\n        }\n    };\n    /**\n     * clear rectangle.\n     */\n    DrawContext.prototype.clearRect = function () {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.clearRect(0, 0, this.canvasContext.canvas.width, this.canvasContext.canvas.height);\n            return;\n        }\n        if (this.exportType == \"tikz\") {\n            this.exportString = \"\";\n        }\n        if (this.exportType == \"svg\") {\n            this.exportString = \"\";\n        }\n    };\n    /**\n     * stroke.\n     */\n    DrawContext.prototype.stroke = function () {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.stroke();\n            return;\n        }\n    };\n    /**\n     * fill text\n     */\n    DrawContext.prototype.fillText = function (txt, x, y) {\n        if (this.exportType == \"canvas\") {\n            this.canvasContext.fillText(txt, x * this.scale, y * this.scale);\n            return;\n        }\n        if (this.exportType == \"tikz\") {\n            // \\node[align=left] at (19,19) {\\tiny $\\int dx y^2$};\n            this.addExport(\"\\\\node[align=left] at (\".concat(x, \",\").concat(-y, \") {\\\\scalebox{0.3} { $\").concat(txt, \"$}};\"));\n            return;\n        }\n        if (this.exportType == \"svg\") {\n            this.addExport(\"<text x=\\\"\".concat(x * this.scale, \"\\\" y=\\\"\").concat(y * this.scale, \"\\\" font-family=\\\"Verdana\\\" font-size=\\\"35\\\">\\n        \").concat(txt, \"</text>\"));\n            return;\n        }\n    };\n    /**\n     * draw arc\n     */\n    DrawContext.prototype.arc = function (x, y_, radius, startAngle, endAngle, loopStyle, fill) {\n        if (this.exportType == \"canvas\") {\n            var y = y_;\n            if (loopStyle == \"dash\") {\n                this.canvasContext.setLineDash([2, 2]);\n            }\n            else {\n                this.canvasContext.setLineDash([]);\n            }\n            this.canvasContext.arc(x * this.scale, y * this.scale, radius * this.scale, startAngle, endAngle);\n            if (fill) {\n                this.canvasContext.fill();\n            }\n            return;\n        }\n        if (this.exportType == \"tikz\") {\n            var y = -y_;\n            var ea = (-startAngle / (2 * Math.PI)) * 360;\n            var sa = (-endAngle / (2 * Math.PI)) * 360;\n            for (var n = 0; n < 2; n++) {\n                if (sa < 0) {\n                    sa += 360;\n                }\n                if (sa > 360) {\n                    sa -= 360;\n                }\n                if (ea < 0) {\n                    ea += 360;\n                }\n                if (ea > 360) {\n                    ea -= 360;\n                }\n                if (sa > ea) {\n                    ea += 360;\n                }\n            }\n            var option = \"\";\n            if (loopStyle == \"dash\") {\n                option = \"[dashed]\";\n            }\n            if (loopStyle == \"wave\") {\n                option = \"[decorate, decoration={snake, amplitude = 0.2mm, segment length = 1mm}]\";\n            }\n            if (loopStyle == \"coil\") {\n                // コイル線のパラメータ\n                var segmentLength = 1.0;\n                var aspect = 0.9;\n                var amplitude = 0.5;\n                var pathLength = void 0;\n                pathLength = radius * (endAngle - startAngle);\n                // 経路の長さが1波長(segmentLength)よりも短い場合、線の装飾をしない。\n                if (pathLength < segmentLength) {\n                    option = \"\";\n                }\n                else {\n                    var n = void 0;\n                    var effectiveSegmentLength = void 0;\n                    var coilNTimesLength = void 0;\n                    n = Math.floor(pathLength / segmentLength);\n                    coilNTimesLength =\n                        2 * aspect * amplitude + (n - 1 / 2) * segmentLength;\n                    effectiveSegmentLength =\n                        segmentLength + (pathLength - coilNTimesLength) / (n - 1 / 2);\n                    option =\n                        \"[decorate, decoration={coil,\" +\n                            \"amplitude = \".concat(amplitude, \"mm,\") +\n                            \"segment length = \".concat(effectiveSegmentLength, \"mm,\") +\n                            \"aspect = \".concat(aspect) +\n                            \"}]\";\n                }\n            }\n            var command = \"\\\\draw\";\n            if (fill) {\n                command = \"\\\\fill\";\n            }\n            if (Math.abs(endAngle - startAngle) == 2 * Math.PI) {\n                this.addExport(\"\".concat(command, \" \").concat(option, \" (\").concat(x, \",\").concat(y, \") circle [radius=\").concat(radius, \"];\"));\n            }\n            else {\n                this.addExport(\"\".concat(command, \" \").concat(option, \" ([shift=(\").concat(sa, \":\").concat(radius, \")]\").concat(x, \", \").concat(y, \") arc [radius=\").concat(radius, \", start angle=\").concat(sa, \", end angle=\").concat(ea, \"];\"));\n            }\n            return;\n        }\n        if (this.exportType == \"svg\") {\n            var y = y_;\n            var dash = \"\";\n            if (loopStyle == \"dash\") {\n                dash = 'stroke-dasharray=\"4\"';\n            }\n            if (Math.abs(startAngle - endAngle) <= (Math.PI / 1) * 360) {\n                var fillStr = \"fill=\\\"none\\\"\";\n                if (fill) {\n                    fillStr = \"fill=\\\"black\\\"\";\n                }\n                this.addExport(\"<circle cx=\\\"\".concat(x * this.scale, \"\\\" cy=\\\"\").concat(y * this.scale, \"\\\" r=\\\"\").concat(radius * this.scale, \"\\\" stroke=\\\"black\\\" \").concat(dash, \" \").concat(fillStr, \"/>\"));\n                return;\n            }\n            // TODO cole, wave\n            var sx = x + radius * Math.cos(startAngle);\n            var sy = y + radius * Math.sin(startAngle);\n            var ex = x + radius * Math.cos(endAngle);\n            var ey = y + radius * Math.sin(endAngle);\n            var angle = (360 * (endAngle - startAngle)) / (2 * Math.PI);\n            var lx = 0;\n            var ly = 0;\n            if (angle > 0) {\n                ly = 1;\n            }\n            this.addExport(\"<path d=\\\"M \".concat(sx * this.scale, \", \").concat(sy * this.scale, \" A \").concat(radius * this.scale, \" \").concat(radius * this.scale, \" \").concat(angle, \" \").concat(lx, \" \").concat(ly, \" \").concat(ex * this.scale, \", \").concat(ey * this.scale, \"\\\" stroke=\\\"black\\\" \").concat(dash, \" fill=\\\"none\\\"/>\"));\n        }\n    };\n    DrawContext.prototype.startExport = function () {\n        if (this.exportType == \"tikz\") {\n            this.addExport(\"\\\\newcommand{\\\\myDiagram}{\");\n            this.addExport(\"\\\\begin{tikzpicture}[scale=0.1, baseline=(current bounding box.center)]\\n\");\n            return;\n        }\n        if (this.exportType == \"svg\") {\n            this.addExport(\"<svg viewBox=\\\"0 0 \".concat(50 * this.scale, \" \").concat(50 * this.scale, \"\\\">\"));\n        }\n        return;\n    };\n    /**\n     * return export string\n     */\n    DrawContext.prototype.endExport = function () {\n        if (this.exportType == \"tikz\") {\n            this.addExport(\"\\\\end{tikzpicture}\\n \");\n            this.addExport(\"}\\n \");\n            var selector = document.querySelector(\"div#output-tikz\");\n            selector.textContent = this.exportString;\n            var ret = this.exportString;\n            (0,_looger__WEBPACK_IMPORTED_MODULE_2__.loggerVer)(this.exportString);\n            this.exportString = \"\";\n            return ret;\n        }\n        if (this.exportType == \"svg\") {\n            this.addExport(\"</svg>\");\n            var selector = document.querySelector(\"div#output-svg\");\n            selector.textContent = this.exportString;\n            this.fildDownload(this.exportString);\n            var ret = this.exportString;\n            (0,_looger__WEBPACK_IMPORTED_MODULE_2__.loggerVer)(this.exportString);\n            this.exportString = \"\";\n            return ret;\n        }\n        return \"\";\n    };\n    /**\n     *  save data\n     */\n    DrawContext.prototype.insertsavedata = function (saveData) {\n        if (this.exportType == \"svg\") {\n            this.addExport(\"<!-- QuantumSketchSaveDataStart@\".concat(saveData, \"@ -->\"));\n        }\n    };\n    /**\n     * file download\n     */\n    DrawContext.prototype.fildDownload = function (content) {\n        var blob = new Blob([content], { type: \"text/plain\" });\n        var link = document.getElementById(\"download\");\n        if (link) {\n            link.href = window.URL.createObjectURL(blob);\n            var dateStr = new Date().toISOString();\n            var fileName = \"\".concat(dateStr, \".svg\");\n            link.download = fileName;\n            link.hidden = false;\n        }\n    };\n    return DrawContext;\n}());\n\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/DrawContext.ts?");

/***/ }),

/***/ "./src/UI/RDDraw.ts":
/*!**************************!*\
  !*** ./src/UI/RDDraw.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RDDraw\": () => (/* binding */ RDDraw)\n/* harmony export */ });\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Config */ \"./src/Config.ts\");\n/* harmony import */ var _Core_Line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Line */ \"./src/Core/Line.ts\");\n/* harmony import */ var _Core_Loop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Loop */ \"./src/Core/Loop.ts\");\n/* harmony import */ var _Core_MyString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/MyString */ \"./src/Core/MyString.ts\");\n/* harmony import */ var _Core_Vector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Vector */ \"./src/Core/Vector.ts\");\n/* harmony import */ var _looger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../looger */ \"./src/looger.ts\");\n/* harmony import */ var _draw__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./draw */ \"./src/UI/draw.ts\");\n/* harmony import */ var _RDRepository__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RDRepository */ \"./src/UI/RDRepository.ts\");\n/* harmony import */ var _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./RepositoryCommand */ \"./src/UI/RepositoryCommand.ts\");\n/* harmony import */ var _CommandRegistry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./CommandRegistry */ \"./src/UI/CommandRegistry.ts\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Central UI orchestrator for the editor. This class owns the canvas draw\n * loop, manages repository mutations, and routes all user input (clicks,\n * keyboard, command buttons) through a command registry so that new features\n * can be added without editing a monolithic switch statement.\n */\nvar RDDraw = /** @class */ (function () {\n    function RDDraw(canvas, drawContext) {\n        this.repository = new _RDRepository__WEBPACK_IMPORTED_MODULE_7__.RDRepository();\n        this.isMouseDown = \"Up\";\n        // private prevX: number = 0;\n        // private prevY: number = 0;\n        this.pointerPrev = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0, 0);\n        this.rawPointer = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0, 0);\n        this.drawMode = \"normal\";\n        this.isNoSelectMode = false;\n        this.contextMenuElement = null;\n        this.commandRegistry = new _CommandRegistry__WEBPACK_IMPORTED_MODULE_9__.CommandRegistry();\n        this.loopControls = {\n            container: null,\n            radiusSlider: null,\n            startSlider: null,\n            endSlider: null,\n            radiusValue: null,\n            startValue: null,\n            endValue: null,\n            arcValue: null,\n            gapValue: null,\n        };\n        this.suppressClick = false;\n        this.canvas = canvas;\n        this.context = canvas.getContext(\"2d\");\n        this.drawContext = drawContext;\n        this.registerCommands();\n        this.bind();\n        this.drawAll();\n    }\n    RDDraw.prototype.bind = function () {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        this.canvas.addEventListener(\"click\", function (ev) {\n            _this.onCanvasClick(ev);\n        });\n        this.canvas.addEventListener(\"dblclick\", function (ev) {\n            _this.onCanvasDoubleClick(ev);\n        });\n        this.canvas.addEventListener(\"mousedown\", function (ev) {\n            _this.mouseDown(ev);\n        });\n        this.canvas.addEventListener(\"mouseup\", function (ev) {\n            _this.mouseUp(ev);\n        });\n        this.canvas.addEventListener(\"mousemove\", function (ev) {\n            _this.move(ev);\n        });\n        document.addEventListener(\"keydown\", function (ev) {\n            _this.onKeyDown(ev);\n        });\n        (_a = (document.getElementById(\"nav-redo\"))) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", function (ev) {\n            ev.preventDefault();\n            _this.redo();\n        });\n        (_b = (document.getElementById(\"nav-undo\"))) === null || _b === void 0 ? void 0 : _b.addEventListener(\"click\", function (ev) {\n            ev.preventDefault();\n            _this.undo();\n        });\n        (_c = (document.getElementById(\"nav-export-tikz\"))) === null || _c === void 0 ? void 0 : _c.addEventListener(\"click\", function (ev) {\n            ev.preventDefault();\n            _this.drawAll(\"tikz\");\n        });\n        (_d = (document.getElementById(\"nav-export-svg\"))) === null || _d === void 0 ? void 0 : _d.addEventListener(\"click\", function (ev) {\n            ev.preventDefault();\n            _this.drawAll(\"svg\");\n        });\n        (_e = (document.getElementById(\"download\"))) === null || _e === void 0 ? void 0 : _e.addEventListener(\"click\", function (ev) {\n            _this.drawAll(\"svg\");\n        });\n        this.initializeCommandTriggers();\n        this.setupContextMenu();\n        this.setupLoopControls();\n    };\n    /**\n     * Registers the default set of UI commands. Having a dedicated registry\n      * keeps the mapping between command identifiers and their behaviour in one\n     * place, which makes it much simpler to add, remove, or reuse commands in\n     * other UI surfaces (shortcut keys, palette, context menu, etc.).\n     */\n    RDDraw.prototype.registerCommands = function () {\n        var registry = this.commandRegistry;\n        registry.register({\n            id: \"select-here\",\n            description: \"Select the element closest to the pointer location\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.selectAt(pointer, false);\n            },\n        });\n        registry.register({\n            id: \"sub-select-here\",\n            description: \"Set the sub-selection using the pointer location\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.selectAt(pointer, true);\n            },\n        });\n        registry.register({\n            id: \"mode-normal\",\n            description: \"Switch to selection mode\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.setDrawMode(\"normal\");\n            },\n        });\n        registry.register({\n            id: \"mode-line\",\n            description: \"Switch to propagator drawing mode\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.setDrawMode(\"line\");\n            },\n        });\n        registry.register({\n            id: \"mode-loop\",\n            description: \"Switch to loop drawing mode\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.setDrawMode(\"loop\");\n            },\n        });\n        registry.register({\n            id: \"mode-point\",\n            description: \"Switch to vertex drawing mode\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.setDrawMode(\"point\");\n            },\n        });\n        registry.register({\n            id: \"mode-string\",\n            description: \"Switch to text placement mode\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.setDrawMode(\"string\");\n            },\n        });\n        registry.register({\n            id: \"add-vertex\",\n            description: \"Place a vertex at the pointer position\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.insertVertex(pointer);\n            },\n        });\n        registry.register({\n            id: \"add-loop\",\n            description: \"Create a loop centred at the pointer position\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.putLoop(pointer.x, pointer.y);\n            },\n        });\n        registry.register({\n            id: \"add-line-from-pointer\",\n            description: \"Create a propagator ending at the pointer position\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.advanceLineTool(pointer);\n            },\n        });\n        registry.register({\n            id: \"add-text\",\n            description: \"Insert a text label at the pointer position\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.setString(pointer.x, pointer.y);\n            },\n        });\n        registry.register({\n            id: \"fill\",\n            description: \"Fill the currently selected loop\",\n            requiresPointer: true,\n            execute: function (_a) {\n                var host = _a.host, pointer = _a.pointer;\n                return host.fill(pointer.x, pointer.y);\n            },\n        });\n        registry.register({\n            id: \"toggle-arrow\",\n            description: \"Toggle arrow direction on the selected propagator\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.allowToggle();\n            },\n        });\n        registry.register({\n            id: \"arrow-rotate-left\",\n            description: \"Rotate the propagator arrow counter-clockwise\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.rotateArrow(-Math.PI / 12);\n            },\n        });\n        registry.register({\n            id: \"arrow-rotate-right\",\n            description: \"Rotate the propagator arrow clockwise\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.rotateArrow(Math.PI / 12);\n            },\n        });\n        registry.register({\n            id: \"arrow-reset\",\n            description: \"Reset the propagator arrow rotation\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.resetArrowRotation();\n            },\n        });\n        registry.register({\n            id: \"change-type\",\n            description: \"Cycle the selected propagator's particle type\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.changeType();\n            },\n        });\n        registry.register({\n            id: \"change-style\",\n            description: \"Cycle the selected propagator's visual style\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.changeStyle();\n            },\n        });\n        registry.register({\n            id: \"delete\",\n            description: \"Delete the currently selected element\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.delete();\n            },\n        });\n        registry.register({\n            id: \"undo\",\n            description: \"Undo the last change\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.undo();\n            },\n        });\n        registry.register({\n            id: \"redo\",\n            description: \"Redo the previously undone change\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.redo();\n            },\n        });\n        registry.register({\n            id: \"rotation\",\n            description: \"Rotate the selection clockwise\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.rotation();\n            },\n        });\n        registry.register({\n            id: \"anti-rotation\",\n            description: \"Rotate the selection counter-clockwise\",\n            execute: function (_a) {\n                var host = _a.host;\n                return host.antiRotation();\n            },\n        });\n    };\n    /**\n     * Registers click handlers for every `data-command` element. Any new button\n     * or menu entry simply needs the attribute and will automatically route\n     * through the command registry.\n     */\n    RDDraw.prototype.initializeCommandTriggers = function () {\n        var _this = this;\n        var triggers = document.querySelectorAll(\"[data-command]\");\n        triggers.forEach(function (trigger) {\n            trigger.addEventListener(\"click\", function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                var element = ev.currentTarget;\n                var command = element.dataset.command;\n                if (!command) {\n                    return;\n                }\n                _this.handleCommand(command);\n            });\n        });\n    };\n    /**\n     * Runs a command from UI surfaces. Centralising the clutch of ancillary\n     * work (closing menus, logging, pointer handling) keeps the event handlers\n     * trivial and consistent.\n     */\n    RDDraw.prototype.handleCommand = function (commandId) {\n        var executed = this.runCommand(commandId);\n        if (executed) {\n            this.hideContextMenu();\n        }\n    };\n    RDDraw.prototype.runCommand = function (commandId) {\n        try {\n            return this.commandRegistry.execute(commandId, this, this.getPointer());\n        }\n        catch (error) {\n            (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"command '\".concat(commandId, \"' failed: \").concat(error));\n            return false;\n        }\n    };\n    RDDraw.prototype.selectAt = function (point, additive) {\n        var _a;\n        this.resetLoopPreview();\n        var currentId = (_a = this.repository.currentElement()) === null || _a === void 0 ? void 0 : _a.id;\n        var hit = this.repository.findElement(point, currentId);\n        if (!hit) {\n            if (!additive) {\n                this.repository.clearSelectMode();\n                this.drawAll();\n            }\n            return;\n        }\n        if (additive) {\n            this.repository.toggleSelection(hit);\n        }\n        else {\n            this.repository.setCurrentElement(hit);\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.performMoveDrag = function (pointer) {\n        if (!this.dragSession || this.dragSession.type !== \"move\") {\n            return;\n        }\n        var deltaStep = pointer.minus(this.dragSession.lastPointer);\n        if (deltaStep.x === 0 && deltaStep.y === 0) {\n            return;\n        }\n        this.dragSession.lastPointer = pointer;\n        this.dragSession.totalDelta = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(this.dragSession.totalDelta.x + deltaStep.x, this.dragSession.totalDelta.y + deltaStep.y);\n        this.dragSession.elements.forEach(function (elem) {\n            elem.move(deltaStep);\n        });\n        this.drawAll();\n        this.suppressClick = true;\n    };\n    RDDraw.prototype.performHandleDrag = function (pointer) {\n        if (!this.dragSession || this.dragSession.type !== \"handle\") {\n            return;\n        }\n        var session = this.dragSession;\n        var line = session.line;\n        var initial = session.initial;\n        this.dragSession.lastPointer = pointer;\n        if (session.handle === \"origin\") {\n            line.origin.moveAbsolute(pointer);\n            if (initial.control) {\n                var delta = pointer.minus(initial.origin);\n                var newControl = initial.control.add(delta);\n                if (!line.control) {\n                    line.control = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(newControl.x, newControl.y);\n                }\n                else {\n                    line.control.moveAbsolute(newControl);\n                }\n            }\n        }\n        else if (session.handle === \"to\") {\n            line.to.moveAbsolute(pointer);\n            if (initial.control) {\n                var delta = pointer.minus(initial.to);\n                var newControl = initial.control.add(delta);\n                if (!line.control) {\n                    line.control = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(newControl.x, newControl.y);\n                }\n                else {\n                    line.control.moveAbsolute(newControl);\n                }\n            }\n        }\n        else {\n            if (!line.control) {\n                line.control = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(pointer.x, pointer.y);\n            }\n            else {\n                line.control.moveAbsolute(pointer);\n            }\n        }\n        this.drawAll();\n        this.suppressClick = true;\n    };\n    RDDraw.prototype.insertVertex = function (point) {\n        var vertex = this.ensureVertex(point);\n        this.repository.setCurrentElement(vertex);\n        this.setDrawMode(\"normal\");\n        return vertex;\n    };\n    RDDraw.prototype.ensureVertex = function (point) {\n        var tolerance = 2;\n        var existing = this.findNearestVertex(point, tolerance);\n        if (existing) {\n            this.repository.setCurrentElement(existing);\n            return existing;\n        }\n        var vertex = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(point.x, point.y);\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetVertex(vertex));\n        var created = this.repository.currentElement();\n        if (created && (0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(created)) {\n            return created;\n        }\n        return vertex;\n    };\n    RDDraw.prototype.findNearestVertex = function (point, tolerance) {\n        var nearest = undefined;\n        var minDistance = Number.POSITIVE_INFINITY;\n        var vertices = this.repository.getAllVertex();\n        vertices.forEach(function (vertex) {\n            var distance = vertex.formalDistance(point);\n            if (distance < minDistance) {\n                minDistance = distance;\n                nearest = vertex;\n            }\n        });\n        if (nearest && minDistance <= tolerance) {\n            return nearest;\n        }\n        return undefined;\n    };\n    RDDraw.prototype.findNearestLine = function (point, tolerance) {\n        var nearest = undefined;\n        var minDistance = Number.POSITIVE_INFINITY;\n        var lines = this.repository.getAllLine();\n        lines.forEach(function (line) {\n            var distance = line.formalDistance(point);\n            if (distance < minDistance) {\n                minDistance = distance;\n                nearest = line;\n            }\n        });\n        if (nearest && minDistance <= tolerance) {\n            return nearest;\n        }\n        return undefined;\n    };\n    RDDraw.prototype.advanceLineTool = function (point) {\n        if (this.drawMode !== \"line\") {\n            this.drawMode = \"line\";\n        }\n        var startPoint = this.resolveLinePoint(point);\n        if (!this.lineDraftStart) {\n            this.lineDraftStart = startPoint;\n            this.repository.setCurrentElement(startPoint);\n            this.drawAll();\n            return;\n        }\n        var endPoint = this.resolveLinePoint(point);\n        if (startPoint === this.lineDraftStart && endPoint === this.lineDraftStart) {\n            this.lineDraftStart = undefined;\n            this.drawAll();\n            return;\n        }\n        var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n        line.origin = this.lineDraftStart;\n        line.to = endPoint;\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n        this.lineDraftStart = undefined;\n        this.repository.clearSelectMode();\n        this.setDrawMode(\"normal\");\n    };\n    RDDraw.prototype.resolveLinePoint = function (point) {\n        var tolerance = 2;\n        var existingVertex = this.findNearestVertex(point, tolerance);\n        if (existingVertex) {\n            return existingVertex;\n        }\n        var existingLine = this.findNearestLine(point, tolerance * 2);\n        if (existingLine) {\n            var projected = existingLine.closestPoint(point);\n            var snap = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(projected.x, projected.y);\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetVertex(snap));\n            return this.repository.currentElement();\n        }\n        var snapPoint = this.snapToGrid(point);\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetVertex(snapPoint));\n        return this.repository.currentElement();\n    };\n    RDDraw.prototype.snapToGrid = function (point) {\n        var grid = 0.5;\n        var snapped = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(Math.round(point.x / grid) * grid, Math.round(point.y / grid) * grid);\n        return snapped;\n    };\n    RDDraw.prototype.handleLoopTool = function (point) {\n        var current = this.repository.currentElement();\n        if (!current) {\n            this.putLoop(point.x, point.y);\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(current)) {\n            var loop = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n            loop.origin = point;\n            current.addLoop(loop);\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoop(loop));\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(current)) {\n            var loop = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n            loop.origin = current.to.add(current.directionUnit().multi(loop.radius * 2));\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoop(loop));\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(current)) {\n            var loop = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n            loop.origin = current;\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoop(loop));\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        this.putLoop(point.x, point.y);\n        this.setDrawMode(\"normal\");\n    };\n    RDDraw.prototype.cancelLineDraft = function () {\n        if (!this.lineDraftStart) {\n            return;\n        }\n        this.lineDraftStart = undefined;\n        this.drawAll();\n    };\n    /**\n     * Wires up the custom context menu so right-click behaves consistently with\n     * the command palette. The menu is lightweight and hides whenever the user\n     * clicks elsewhere or the viewport changes.\n     */\n    RDDraw.prototype.setupContextMenu = function () {\n        var _this = this;\n        this.contextMenuElement = document.getElementById(\"canvas-context-menu\");\n        if (!this.contextMenuElement) {\n            return;\n        }\n        this.canvas.addEventListener(\"contextmenu\", function (ev) {\n            ev.preventDefault();\n            _this.setPrevXY(ev.offsetX, ev.offsetY);\n            _this.showContextMenu(ev.clientX, ev.clientY);\n        });\n        document.addEventListener(\"click\", function (ev) {\n            if (!_this.contextMenuElement) {\n                return;\n            }\n            if (_this.contextMenuElement.contains(ev.target)) {\n                return;\n            }\n            _this.hideContextMenu();\n        });\n        document.addEventListener(\"keydown\", function (ev) {\n            if (ev.key === \"Escape\") {\n                _this.hideContextMenu();\n            }\n        });\n        window.addEventListener(\"resize\", function () {\n            _this.hideContextMenu();\n        });\n        window.addEventListener(\"scroll\", function () {\n            _this.hideContextMenu();\n        });\n    };\n    RDDraw.prototype.setupLoopControls = function () {\n        var _this = this;\n        var _a, _b;\n        this.loopControls.container = document.getElementById(\"loop-controls\");\n        this.loopControls.radiusSlider = document.getElementById(\"loop-radius\");\n        this.loopControls.startSlider = document.getElementById(\"loop-gap-start\");\n        this.loopControls.endSlider = document.getElementById(\"loop-gap-end\");\n        this.loopControls.radiusValue = document.getElementById(\"loop-radius-value\");\n        this.loopControls.startValue = document.getElementById(\"loop-start-value\");\n        this.loopControls.endValue = document.getElementById(\"loop-end-value\");\n        this.loopControls.arcValue = document.getElementById(\"loop-arc-value\");\n        this.loopControls.gapValue = document.getElementById(\"loop-gap-value\");\n        var radiusSlider = this.loopControls.radiusSlider;\n        if (radiusSlider) {\n            radiusSlider.addEventListener(\"input\", function (ev) {\n                var value = Number(ev.target.value);\n                _this.previewLoopRadius(value);\n            });\n            radiusSlider.addEventListener(\"change\", function (ev) {\n                var value = Number(ev.target.value);\n                _this.commitLoopRadius(value);\n            });\n        }\n        var startSlider = this.loopControls.startSlider;\n        if (startSlider) {\n            startSlider.addEventListener(\"input\", function (ev) {\n                var value = Number(ev.target.value);\n                _this.previewLoopStart(value);\n            });\n            startSlider.addEventListener(\"change\", function (ev) {\n                var value = Number(ev.target.value);\n                _this.commitLoopStart(value);\n            });\n        }\n        var endSlider = this.loopControls.endSlider;\n        if (endSlider) {\n            endSlider.addEventListener(\"input\", function (ev) {\n                var value = Number(ev.target.value);\n                _this.previewLoopEnd(value);\n            });\n            endSlider.addEventListener(\"change\", function (ev) {\n                var value = Number(ev.target.value);\n                _this.commitLoopEnd(value);\n            });\n        }\n        (_a = this.loopControls.container) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\"[data-loop-step]\").forEach(function (button) {\n            button.addEventListener(\"click\", function () {\n                var _a;\n                var property = button.dataset.loopStep;\n                var step = Number((_a = button.dataset.step) !== null && _a !== void 0 ? _a : \"0\");\n                if (!property || Number.isNaN(step)) {\n                    return;\n                }\n                _this.adjustLoop(property, step);\n            });\n        });\n        (_b = this.loopControls.container) === null || _b === void 0 ? void 0 : _b.querySelectorAll(\"[data-loop-action]\").forEach(function (button) {\n            button.addEventListener(\"click\", function () {\n                var action = button.dataset.loopAction;\n                if (!action) {\n                    return;\n                }\n                _this.handleLoopAction(action);\n            });\n        });\n    };\n    RDDraw.prototype.showContextMenu = function (clientX, clientY) {\n        if (!this.contextMenuElement) {\n            return;\n        }\n        var menu = this.contextMenuElement;\n        menu.style.visibility = \"hidden\";\n        menu.style.display = \"block\";\n        var menuWidth = menu.offsetWidth;\n        var menuHeight = menu.offsetHeight;\n        var viewportWidth = window.innerWidth;\n        var viewportHeight = window.innerHeight;\n        var left = Math.min(clientX, viewportWidth - menuWidth - 8);\n        var top = Math.min(clientY, viewportHeight - menuHeight - 8);\n        menu.style.left = \"\".concat(Math.max(0, left), \"px\");\n        menu.style.top = \"\".concat(Math.max(0, top), \"px\");\n        menu.style.visibility = \"visible\";\n    };\n    RDDraw.prototype.hideContextMenu = function () {\n        if (!this.contextMenuElement) {\n            return;\n        }\n        this.contextMenuElement.style.display = \"none\";\n        this.contextMenuElement.style.visibility = \"hidden\";\n    };\n    /**\n     * Sets the active drawing mode and refreshes the UI. This wrapper is used by\n     * both keyboard shortcuts and command buttons to ensure we always reset line\n     * staging state and highlight the currently active tool.\n     */\n    RDDraw.prototype.setDrawMode = function (mode) {\n        this.resetLoopPreview();\n        this.drawMode = mode;\n        if (mode !== \"line\") {\n            this.lineDraftStart = undefined;\n        }\n        this.drawAll();\n    };\n    /**\n     * Keeps the button panel in sync with the active draw mode. Using a helper\n     * avoids sprinkling DOM-manipulation logic around the codebase.\n     */\n    RDDraw.prototype.updateModeButtons = function () {\n        var _this = this;\n        var modeButtons = document.querySelectorAll(\"[data-mode]\");\n        modeButtons.forEach(function (button) {\n            var buttonMode = button.dataset.mode;\n            if (!buttonMode) {\n                return;\n            }\n            if (buttonMode === _this.drawMode) {\n                button.classList.add(\"active\");\n                button.setAttribute(\"aria-pressed\", \"true\");\n            }\n            else {\n                button.classList.remove(\"active\");\n                button.setAttribute(\"aria-pressed\", \"false\");\n            }\n        });\n    };\n    /**\n     * Helper for comparing vectors when the pointer interaction introduces minor\n     * floating point noise. Keeps handle drags from enqueuing no-op commands.\n     */\n    RDDraw.prototype.vectorsAlmostEqual = function (a, b, epsilon) {\n        if (epsilon === void 0) { epsilon = 1e-6; }\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return Math.abs(a.x - b.x) < epsilon && Math.abs(a.y - b.y) < epsilon;\n    };\n    RDDraw.prototype.hitTestLineHandle = function (point) {\n        var candidates = [];\n        var current = this.repository.currentElement();\n        if (current && (0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(current)) {\n            candidates.push(current);\n        }\n        this.repository.getSelectedElements().forEach(function (elem) {\n            if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem) && !candidates.includes(elem)) {\n                candidates.push(elem);\n            }\n        });\n        if (candidates.length === 0) {\n            return null;\n        }\n        var tolerance = 0.6;\n        var bestMatch = null;\n        var bestDistance = Number.POSITIVE_INFINITY;\n        candidates.forEach(function (line) {\n            var handleSpecs = [\n                { handle: \"origin\", position: line.origin, createControl: false },\n                { handle: \"to\", position: line.to, createControl: false },\n            ];\n            if (line.control) {\n                handleSpecs.push({ handle: \"control\", position: line.control, createControl: false });\n            }\n            else {\n                handleSpecs.push({ handle: \"control\", position: line.pointAt(0.5), createControl: true });\n            }\n            handleSpecs.forEach(function (spec) {\n                var distance = point.minus(spec.position).length();\n                if (distance < tolerance && distance < bestDistance) {\n                    bestMatch = { line: line, handle: spec.handle, position: spec.position, createControl: spec.createControl };\n                    bestDistance = distance;\n                }\n            });\n        });\n        return bestMatch;\n    };\n    RDDraw.prototype.drawLineHandles = function (lines) {\n        if (lines.length === 0) {\n            return;\n        }\n        var ctx = this.context;\n        var scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        var baseRadius = Math.max(4, Math.min(6, scale * 0.35));\n        lines.forEach(function (line) {\n            var controlPoint = line.control ? line.control : line.pointAt(0.5);\n            var hasControl = !!line.control;\n            ctx.save();\n            ctx.strokeStyle = \"rgba(30, 144, 255, 0.6)\";\n            ctx.lineWidth = 1;\n            ctx.setLineDash(hasControl ? [4, 4] : [6, 6]);\n            ctx.beginPath();\n            ctx.moveTo(line.origin.x * scale, line.origin.y * scale);\n            ctx.lineTo(controlPoint.x * scale, controlPoint.y * scale);\n            ctx.lineTo(line.to.x * scale, line.to.y * scale);\n            ctx.stroke();\n            ctx.restore();\n            var handles = [\n                { point: line.origin, ghost: false },\n                { point: line.to, ghost: false },\n                { point: controlPoint, ghost: !hasControl },\n            ];\n            handles.forEach(function (handle) {\n                ctx.save();\n                var px = handle.point.x * scale;\n                var py = handle.point.y * scale;\n                var radius = handle.ghost ? baseRadius + 2 : baseRadius;\n                ctx.beginPath();\n                ctx.arc(px, py, radius, 0, Math.PI * 2);\n                if (handle.ghost) {\n                    ctx.fillStyle = \"rgba(30, 144, 255, 0.15)\";\n                    ctx.strokeStyle = \"rgba(30, 144, 255, 0.9)\";\n                    ctx.lineWidth = 1.5;\n                    ctx.fill();\n                }\n                else {\n                    ctx.fillStyle = \"rgba(30, 144, 255, 0.9)\";\n                    ctx.strokeStyle = \"white\";\n                    ctx.lineWidth = 1.5;\n                    ctx.fill();\n                }\n                ctx.stroke();\n                ctx.restore();\n            });\n        });\n    };\n    RDDraw.prototype.setPrevXY = function (eventX, eventY) {\n        this.rawPointer = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(eventX, eventY);\n        // loggerVer(`rawPointer ${this.rawPointer.x}  ${this.rawPointer.y}`);\n    };\n    /**\n     * Returns the last pointer position in canvas coordinates. Centralises\n     * scaling logic so every command receives consistent values regardless of\n     * the current zoom level.\n     */\n    RDDraw.prototype.getPointer = function () {\n        var scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        var p = this.rawPointer.multi(1 / scale).floor();\n        // loggerVer(`p ${p.x}  ${p.y}`);\n        return p;\n    };\n    RDDraw.prototype.getPointerPrecise = function () {\n        var scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n        return this.rawPointer.multi(1 / scale);\n    };\n    RDDraw.prototype.onCanvasClick = function (ev) {\n        if (this.suppressClick) {\n            this.suppressClick = false;\n            return;\n        }\n        this.isMouseDown = \"Up\";\n        this.resetLoopPreview();\n        this.setPrevXY(ev.offsetX, ev.offsetY);\n        var point = this.getPointer();\n        switch (this.drawMode) {\n            case \"normal\":\n                this.selectAt(point, ev.shiftKey || ev.metaKey || ev.ctrlKey);\n                break;\n            case \"point\":\n                this.insertVertex(point);\n                break;\n            case \"line\":\n                this.advanceLineTool(point);\n                break;\n            case \"loop\":\n                this.handleLoopTool(point);\n                break;\n            case \"string\":\n                this.setString(point.x, point.y);\n                break;\n        }\n    };\n    RDDraw.prototype.onCanvasDoubleClick = function (ev) {\n        this.resetLoopPreview();\n        this.pendingDrag = undefined;\n        this.dragSession = undefined;\n        this.selectionRect = undefined;\n        this.setPrevXY(ev.offsetX, ev.offsetY);\n        var point = this.getPointer();\n        var precisePoint = this.getPointerPrecise();\n        if (this.drawMode === \"normal\") {\n            var handleHit = this.hitTestLineHandle(precisePoint);\n            if (handleHit && handleHit.handle === \"control\" && handleHit.createControl) {\n                var controlPoint = handleHit.position.copy();\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLineControlPoint(handleHit.line, controlPoint));\n                this.repository.setCurrentElement(handleHit.line);\n                this.drawAll();\n                this.suppressClick = true;\n                return;\n            }\n        }\n        if (this.drawMode !== \"normal\") {\n            this.setDrawMode(\"normal\");\n        }\n        var additive = ev.shiftKey || ev.metaKey || ev.ctrlKey;\n        var tolerance = 12;\n        var candidates = this.repository.findAllNear(point, tolerance);\n        if (candidates.length === 0) {\n            this.suppressClick = true;\n            return;\n        }\n        var lastContext = this.lastHitContext;\n        var nextIndex = 0;\n        if (lastContext &&\n            Math.abs(lastContext.point.x - point.x) < 1e-6 &&\n            Math.abs(lastContext.point.y - point.y) < 1e-6 &&\n            lastContext.tolerance === tolerance) {\n            var current_1 = this.repository.currentElement();\n            var currentIndex = current_1\n                ? candidates.findIndex(function (elem) { return elem.id === current_1.id; })\n                : -1;\n            nextIndex = currentIndex >= 0 ? (currentIndex + 1) % candidates.length : 0;\n        }\n        var hit = candidates[nextIndex];\n        if (additive) {\n            this.repository.toggleSelection(hit);\n        }\n        else {\n            this.repository.setCurrentElement(hit);\n        }\n        this.lastHitContext = { point: point.copy(), tolerance: tolerance };\n        this.drawAll();\n        this.suppressClick = true;\n    };\n    RDDraw.prototype.mouseDown = function (ev) {\n        var _this = this;\n        var _a;\n        this.isMouseDown = \"Downning\";\n        this.setPrevXY(ev.offsetX, ev.offsetY);\n        var point = this.getPointer();\n        var precisePoint = this.getPointerPrecise();\n        this.suppressClick = false;\n        this.pendingDrag = undefined;\n        this.selectionRect = undefined;\n        if (this.drawMode === \"normal\") {\n            var handleHit = this.hitTestLineHandle(precisePoint);\n            if (handleHit) {\n                var line = handleHit.line, handle = handleHit.handle, createControl = handleHit.createControl;\n                if (!this.repository.isSelected(line)) {\n                    this.repository.setCurrentElement(line);\n                    this.drawAll();\n                }\n                this.dragSession = {\n                    type: \"handle\",\n                    line: line,\n                    handle: handle,\n                    startPointer: point,\n                    lastPointer: point,\n                    initial: {\n                        origin: line.origin.copy(),\n                        to: line.to.copy(),\n                        control: line.control ? line.control.copy() : null,\n                    },\n                    createdControl: createControl,\n                };\n                this.pendingDrag = undefined;\n                this.suppressClick = true;\n                return;\n            }\n            var additive = ev.shiftKey || ev.metaKey || ev.ctrlKey;\n            var forceRect = ev.altKey;\n            var hit = this.repository.findElement(point, (_a = this.repository.currentElement()) === null || _a === void 0 ? void 0 : _a.id);\n            if (hit) {\n                var alreadySelected = this.repository.isSelected(hit);\n                if (!alreadySelected) {\n                    if (additive) {\n                        this.repository.toggleSelection(hit);\n                    }\n                    else {\n                        this.repository.setCurrentElement(hit);\n                    }\n                    this.drawAll();\n                }\n            }\n            else if (!additive) {\n                this.repository.clearSelectMode();\n                this.drawAll();\n            }\n            this.pendingDrag = {\n                startPointer: point,\n                hit: hit,\n                additive: additive,\n                forceRect: forceRect,\n            };\n        }\n        setTimeout(function () {\n            if (_this.isMouseDown == \"Downning\") {\n                _this.isMouseDown = \"Down\";\n            }\n        }, 300);\n    };\n    RDDraw.prototype.mouseUp = function (ev) {\n        this.isMouseDown = \"Up\";\n        this.pendingDrag = undefined;\n        if (!this.dragSession) {\n            this.selectionRect = undefined;\n            return;\n        }\n        if (this.dragSession.type === \"handle\") {\n            var session = this.dragSession;\n            this.dragSession = undefined;\n            var line = session.line;\n            var initial = session.initial;\n            var finalOrigin = line.origin.copy();\n            var finalTo = line.to.copy();\n            var finalControl = line.control ? line.control.copy() : null;\n            line.origin.moveAbsolute(initial.origin);\n            line.to.moveAbsolute(initial.to);\n            line.control = initial.control ? initial.control.copy() : null;\n            if (session.handle === \"control\" &&\n                session.createdControl &&\n                !finalControl &&\n                !this.vectorsAlmostEqual(session.lastPointer, session.startPointer)) {\n                finalControl = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(session.lastPointer.x, session.lastPointer.y);\n            }\n            if (session.handle === \"origin\" &&\n                !this.vectorsAlmostEqual(finalOrigin, initial.origin)) {\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLineEndpoint(line, \"origin\", finalOrigin));\n            }\n            if (session.handle === \"to\" &&\n                !this.vectorsAlmostEqual(finalTo, initial.to)) {\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLineEndpoint(line, \"to\", finalTo));\n            }\n            var initialControl = initial.control;\n            var controlChanged = (initialControl && !finalControl) ||\n                (!initialControl && finalControl) ||\n                (initialControl && finalControl && !this.vectorsAlmostEqual(finalControl, initialControl));\n            if (session.handle === \"control\") {\n                if (controlChanged) {\n                    this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLineControlPoint(line, finalControl));\n                }\n                else if (session.createdControl && !finalControl) {\n                    // revert creation without change\n                    line.control = null;\n                }\n            }\n            this.drawAll();\n            return;\n        }\n        if (this.dragSession.type === \"move\") {\n            var total = this.dragSession.totalDelta;\n            var elements = this.dragSession.elements;\n            this.dragSession = undefined;\n            if (Math.abs(total.x) > 0 || Math.abs(total.y) > 0) {\n                var revert_1 = total.multi(-1);\n                elements.forEach(function (elem) { return elem.move(revert_1); });\n                var commitDelta = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(total.x, total.y);\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.MoveGroup(elements, commitDelta));\n            }\n            this.drawAll();\n            return;\n        }\n        if (this.dragSession.type === \"rect\") {\n            var rect = this.dragSession;\n            var area = Math.abs((rect.current.x - rect.start.x) * (rect.current.y - rect.start.y));\n            this.dragSession = undefined;\n            var additive = rect.additive;\n            this.selectionRect = undefined;\n            if (area > 0.01) {\n                this.repository.selectInRect({ x1: rect.start.x, y1: rect.start.y, x2: rect.current.x, y2: rect.current.y }, additive);\n                this.suppressClick = true;\n                this.drawAll();\n            }\n            else {\n                this.suppressClick = false;\n            }\n            return;\n        }\n    };\n    RDDraw.prototype.move = function (ev) {\n        var _a, _b, _c;\n        // loggerVer(`offset ${ev.offsetX}  ${ev.offsetY}`);\n        // loggerVer(`screen ${ev.screenX}  ${ev.screenY}`);\n        this.setPrevXY(ev.offsetX, ev.offsetY);\n        var pointer = this.getPointer();\n        if (this.pendingDrag) {\n            var delta = pointer.minus(this.pendingDrag.startPointer);\n            var threshold = 0.2;\n            if (Math.abs(delta.x) > threshold || Math.abs(delta.y) > threshold) {\n                var hit = this.pendingDrag.hit;\n                var additive = this.pendingDrag.additive;\n                var forceRect = this.pendingDrag.forceRect;\n                var selected = this.repository.getSelectedElements();\n                var hitSelected = hit ? this.repository.isSelected(hit) : false;\n                if (hit &&\n                    hitSelected &&\n                    !forceRect) {\n                    var elements = selected.length > 0 ? selected : [hit];\n                    this.dragSession = {\n                        type: \"move\",\n                        elements: elements,\n                        startPointer: this.pendingDrag.startPointer,\n                        lastPointer: this.pendingDrag.startPointer,\n                        totalDelta: new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0, 0),\n                    };\n                    this.pendingDrag = undefined;\n                    this.performMoveDrag(pointer);\n                }\n                else {\n                    var rectAdditive = additive;\n                    this.dragSession = {\n                        type: \"rect\",\n                        start: this.pendingDrag.startPointer,\n                        current: pointer,\n                        additive: rectAdditive,\n                    };\n                    this.selectionRect = {\n                        x1: this.pendingDrag.startPointer.x,\n                        y1: this.pendingDrag.startPointer.y,\n                        x2: pointer.x,\n                        y2: pointer.y,\n                    };\n                    this.pendingDrag = undefined;\n                    this.drawAll();\n                    this.suppressClick = true;\n                    return;\n                }\n            }\n        }\n        if (((_a = this.dragSession) === null || _a === void 0 ? void 0 : _a.type) === \"rect\") {\n            this.dragSession.current = pointer;\n            this.selectionRect = {\n                x1: this.dragSession.start.x,\n                y1: this.dragSession.start.y,\n                x2: pointer.x,\n                y2: pointer.y,\n            };\n            this.drawAll();\n            this.suppressClick = true;\n            return;\n        }\n        if (((_b = this.dragSession) === null || _b === void 0 ? void 0 : _b.type) === \"handle\") {\n            this.performHandleDrag(pointer);\n            return;\n        }\n        if (((_c = this.dragSession) === null || _c === void 0 ? void 0 : _c.type) === \"move\" && this.isMouseDown === \"Down\") {\n            this.performMoveDrag(pointer);\n        }\n    };\n    RDDraw.prototype.onKeyDown = function (ev) {\n        if (this.isTextInput(ev)) {\n            return;\n        }\n        var isMeta = ev.ctrlKey || ev.metaKey;\n        var key = ev.key.toLowerCase();\n        if (ev.key === \"Escape\") {\n            if (this.drawMode === \"line\") {\n                this.cancelLineDraft();\n            }\n            this.resetLoopPreview();\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        if (isMeta && key === \"z\") {\n            ev.preventDefault();\n            if (ev.shiftKey) {\n                this.redo();\n            }\n            else {\n                this.undo();\n            }\n            return;\n        }\n        if (isMeta && (key === \"y\" || (key === \"z\" && ev.shiftKey))) {\n            ev.preventDefault();\n            this.redo();\n            return;\n        }\n        if ((ev.key === \"Delete\" || ev.key === \"Backspace\") && !ev.altKey && !ev.metaKey) {\n            ev.preventDefault();\n            this.delete();\n            return;\n        }\n        if (isMeta && key === \"c\") {\n            this.copy();\n            return;\n        }\n        if (isMeta && key === \"e\") {\n            ev.preventDefault();\n            this.drawAll(\"svg\");\n            return;\n        }\n        if (isMeta && key === \"p\") {\n            ev.preventDefault();\n            this.drawAll(\"tikz\");\n            return;\n        }\n        if (ev.key === \"ArrowUp\") {\n            ev.preventDefault();\n            this.keyUp();\n            return;\n        }\n        if (ev.key === \"ArrowRight\") {\n            ev.preventDefault();\n            this.keyRight();\n            return;\n        }\n        if (ev.key === \"ArrowLeft\") {\n            ev.preventDefault();\n            this.keyLeft();\n            return;\n        }\n        if (ev.key === \"ArrowDown\") {\n            ev.preventDefault();\n            this.keyDown();\n            return;\n        }\n    };\n    RDDraw.prototype.isTextInput = function (ev) {\n        var target = ev.target;\n        if (!target) {\n            return false;\n        }\n        var tag = target.tagName;\n        return tag === \"INPUT\" || tag === \"TEXTAREA\" || target.isContentEditable;\n    };\n    RDDraw.prototype.keyUp = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"keyUp\");\n        var selected = this.repository.getSelectedElements();\n        if (selected.length === 0) {\n            return;\n        }\n        var delta = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0, -1).multi(1 / _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale);\n        if (selected.length === 1) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Move(selected[0], delta));\n        }\n        else {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.MoveGroup(selected, delta));\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.keyRight = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"keyRight\");\n        var selected = this.repository.getSelectedElements();\n        if (selected.length === 0) {\n            return;\n        }\n        var delta = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(1, 0).multi(1 / _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale);\n        if (selected.length === 1) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Move(selected[0], delta));\n        }\n        else {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.MoveGroup(selected, delta));\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.keyLeft = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"keyLeft\");\n        var selected = this.repository.getSelectedElements();\n        if (selected.length === 0) {\n            return;\n        }\n        var delta = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(-1, 0).multi(1 / _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale);\n        if (selected.length === 1) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Move(selected[0], delta));\n        }\n        else {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.MoveGroup(selected, delta));\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.keyDown = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"keyDown\");\n        var selected = this.repository.getSelectedElements();\n        if (selected.length === 0) {\n            return;\n        }\n        var delta = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0, 1).multi(1 / _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale);\n        if (selected.length === 1) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Move(selected[0], delta));\n        }\n        else {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.MoveGroup(selected, delta));\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.noSelectMode = function () {\n        this.isNoSelectMode = !this.isNoSelectMode;\n        if (this.isNoSelectMode) {\n            this.repository.clearSelectMode();\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.nextElem = function () {\n        this.repository.nextElem();\n        this.drawAll();\n    };\n    RDDraw.prototype.nextSubElem = function () {\n        this.repository.nextSubElem();\n        this.drawAll();\n    };\n    RDDraw.prototype.preElem = function () {\n        this.repository.preElem();\n        this.drawAll();\n    };\n    RDDraw.prototype.preSubElem = function () {\n        this.repository.preSubElem();\n        this.drawAll();\n    };\n    RDDraw.prototype.fill = function (x, y) {\n        var current = this.repository.currentElement();\n        if (current && (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(current)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Fill(current));\n            this.drawAll();\n            return;\n        }\n        return;\n    };\n    RDDraw.prototype.setString = function (x, y) {\n        var current = this.repository.currentElement();\n        var defult = \"\";\n        if (current && (0,_Core_MyString__WEBPACK_IMPORTED_MODULE_3__.isString)(current)) {\n            defult = current.label;\n        }\n        var text = window.prompt(\"input text( ex. \\\\int e^x dx)\", defult);\n        if (text == null) {\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        if (current && (0,_Core_MyString__WEBPACK_IMPORTED_MODULE_3__.isString)(current)) {\n            current.label = text;\n            this.setDrawMode(\"normal\");\n            return;\n        }\n        var str = new _Core_MyString__WEBPACK_IMPORTED_MODULE_3__.MyString(text);\n        str.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(x, y);\n        var command = new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetString(str);\n        this.repository.doCommand(command);\n        this.setDrawMode(\"normal\");\n    };\n    RDDraw.prototype.putVertex = function (vertex) {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"put vertex..\");\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetVertex(vertex));\n        this.drawAll();\n    };\n    RDDraw.prototype.putLoop = function (x, y) {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"put Loop..\");\n        var loop = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n        loop.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(x, y);\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoop(loop));\n        this.setDrawMode(\"normal\");\n    };\n    /**\n     * Redraws every element according to the requested export target. The method\n     * also maintains the side-panel widgets (current selection, mode indicator)\n     * so that the UI always reflects repository state.\n     */\n    RDDraw.prototype.drawAll = function (exportType) {\n        var _this = this;\n        if (exportType === void 0) { exportType = \"canvas\"; }\n        this.drawContext.setExportType(exportType);\n        // clear\n        this.drawContext.clearRect();\n        this.drawContext.startExport();\n        var elms = this.repository.getAllElements();\n        this.drawContext.beginPath();\n        elms.forEach(function (elm, index) {\n            // loggerVer(\"draw..\");\n            (0,_draw__WEBPACK_IMPORTED_MODULE_6__.draw)(_this.drawContext, elm, exportType);\n        });\n        if (exportType === \"svg\") {\n            this.drawContext.insertsavedata(this.repository.save());\n        }\n        this.drawContext.endExport();\n        this.updateModeButtons();\n        var current = this.repository.currentElement();\n        this.updateLoopControlsUI(current);\n        if (this.isNoSelectMode) {\n            return;\n        }\n        if (exportType != \"canvas\") {\n            return;\n        }\n        if (this.drawMode === \"line\" && this.lineDraftStart) {\n            (0,_draw__WEBPACK_IMPORTED_MODULE_6__.draw)(this.drawContext, this.lineDraftStart, \"canvas\", \"sub\");\n            var pointer = this.getPointer();\n            this.drawContext.beginPath();\n            this.drawContext.setStrokeColor(\"sub\");\n            this.drawContext.moveTo(this.lineDraftStart.x, this.lineDraftStart.y);\n            this.drawContext.lineTo(pointer.x, pointer.y, \"dash\");\n            this.drawContext.stroke();\n            this.drawContext.closePath();\n        }\n        var selected = this.repository.getSelectedElements();\n        selected.forEach(function (elem) {\n            if (current && elem.id === current.id) {\n                return;\n            }\n            (0,_draw__WEBPACK_IMPORTED_MODULE_6__.draw)(_this.drawContext, elem, \"canvas\", \"select\");\n        });\n        var sub = this.repository.currentSubElement();\n        if (sub) {\n            (0,_draw__WEBPACK_IMPORTED_MODULE_6__.draw)(this.drawContext, sub, \"canvas\", \"sub\");\n            this.drawContext.output(\"sub:   \" + sub.description(), \"html\", \"sub\");\n        }\n        if (current) {\n            (0,_draw__WEBPACK_IMPORTED_MODULE_6__.draw)(this.drawContext, current, \"canvas\", \"select\");\n            this.drawContext.output(\"current: \" +\n                current.description() +\n                \" \".concat(current.formalDistance(this.getPointer())), \"html\", \"current\");\n        }\n        this.drawContext.output(this.describeMode(), \"html\", \"mode\");\n        var lineHandleTargets = [];\n        if (current && (0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(current)) {\n            lineHandleTargets.push(current);\n        }\n        selected.forEach(function (elem) {\n            if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem) && !lineHandleTargets.includes(elem)) {\n                lineHandleTargets.push(elem);\n            }\n        });\n        this.drawLineHandles(lineHandleTargets);\n        this.drawContext.closePath();\n        if (this.selectionRect) {\n            var scale = _Config__WEBPACK_IMPORTED_MODULE_0__.config.scale;\n            var left = Math.min(this.selectionRect.x1, this.selectionRect.x2) * scale;\n            var top_1 = Math.min(this.selectionRect.y1, this.selectionRect.y2) * scale;\n            var width = Math.abs(this.selectionRect.x2 - this.selectionRect.x1) * scale;\n            var height = Math.abs(this.selectionRect.y2 - this.selectionRect.y1) * scale;\n            this.context.save();\n            this.context.strokeStyle = \"rgba(30, 144, 255, 0.9)\";\n            this.context.fillStyle = \"rgba(30, 144, 255, 0.2)\";\n            this.context.setLineDash([6, 4]);\n            this.context.strokeRect(left, top_1, width, height);\n            this.context.setLineDash([]);\n            this.context.fillRect(left, top_1, width, height);\n            this.context.restore();\n        }\n    };\n    RDDraw.prototype.describeMode = function () {\n        switch (this.drawMode) {\n            case \"normal\":\n                return \"Select\";\n            case \"point\":\n                return \"Vertex tool\";\n            case \"line\":\n                return this.lineDraftStart ? \"Propagator: pick end\" : \"Propagator: pick start\";\n            case \"loop\":\n                return \"Loop tool\";\n            case \"string\":\n                return \"Text tool\";\n        }\n        return \"\";\n    };\n    RDDraw.prototype.updateLoopControlsUI = function (current) {\n        var controls = this.loopControls;\n        if (!controls.container) {\n            return;\n        }\n        var loop = current && (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(current) ? current : undefined;\n        this.resetLoopPreview(loop === null || loop === void 0 ? void 0 : loop.id);\n        if (!loop) {\n            controls.container.classList.add(\"d-none\");\n            return;\n        }\n        controls.container.classList.remove(\"d-none\");\n        var radius = loop.radius;\n        if (controls.radiusSlider) {\n            var slider = controls.radiusSlider;\n            slider.min = \"1\";\n            slider.step = \"0.5\";\n            var dynamicMax = Math.max(50, Math.ceil(radius + 20));\n            if (Number(slider.max) !== dynamicMax) {\n                slider.max = dynamicMax.toString();\n            }\n            slider.value = radius.toFixed(2);\n        }\n        if (controls.radiusValue) {\n            controls.radiusValue.textContent = radius.toFixed(1);\n        }\n        var startDeg = this.normalizeDegrees(this.radToDeg(loop.loopBeginAngle));\n        var endDegNormalized = this.normalizeDegrees(this.radToDeg(loop.loopEndAngle));\n        var drawnDeg = this.arcLengthDegrees(loop);\n        var gapDeg = Math.max(0, 360 - drawnDeg);\n        var isFullLoop = Math.abs(drawnDeg - 360) < 0.01;\n        var endDeg = isFullLoop ? 360 : endDegNormalized;\n        if (controls.startSlider) {\n            var slider = controls.startSlider;\n            slider.min = \"0\";\n            slider.max = \"360\";\n            slider.step = \"1\";\n            slider.value = Math.round(startDeg).toString();\n        }\n        if (controls.endSlider) {\n            var slider = controls.endSlider;\n            slider.min = \"0\";\n            slider.max = \"360\";\n            slider.step = \"1\";\n            slider.value = Math.round(endDeg).toString();\n        }\n        if (controls.startValue) {\n            controls.startValue.textContent = this.formatDegrees(startDeg);\n        }\n        if (controls.endValue) {\n            controls.endValue.textContent = this.formatDegrees(endDeg);\n        }\n        if (controls.arcValue) {\n            controls.arcValue.textContent = this.formatDegrees(drawnDeg);\n        }\n        if (controls.gapValue) {\n            controls.gapValue.textContent = this.formatDegrees(gapDeg);\n        }\n    };\n    RDDraw.prototype.currentLoop = function () {\n        var current = this.repository.currentElement();\n        if (current && (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(current)) {\n            return current;\n        }\n        return undefined;\n    };\n    RDDraw.prototype.previewLoopRadius = function (value) {\n        var loop = this.currentLoop();\n        if (!loop) {\n            return;\n        }\n        if (!this.loopPreview || this.loopPreview.loopId !== loop.id) {\n            this.loopPreview = { loopId: loop.id, radius: { original: loop.radius } };\n        }\n        else if (!this.loopPreview.radius) {\n            this.loopPreview.radius = { original: loop.radius };\n        }\n        loop.setRadius(value);\n        this.drawAll();\n    };\n    RDDraw.prototype.commitLoopRadius = function (value) {\n        var loop = this.currentLoop();\n        if (!loop) {\n            this.finalizeLoopPreview(\"radius\");\n            return;\n        }\n        var preview = this.loopPreview;\n        if ((preview === null || preview === void 0 ? void 0 : preview.loopId) === loop.id && preview.radius) {\n            var original = preview.radius.original;\n            if (Math.abs(original - value) < 1e-6) {\n                this.finalizeLoopPreview(\"radius\");\n                this.drawAll();\n                return;\n            }\n            loop.setRadius(original);\n            this.finalizeLoopPreview(\"radius\");\n        }\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoopRadius(loop, value));\n        this.drawAll();\n    };\n    RDDraw.prototype.previewLoopStart = function (value) {\n        var loop = this.currentLoop();\n        if (!loop) {\n            return;\n        }\n        var radians = this.degToRad(value);\n        if (!this.loopPreview || this.loopPreview.loopId !== loop.id) {\n            this.loopPreview = { loopId: loop.id, start: { original: loop.loopBeginAngle } };\n        }\n        else if (!this.loopPreview.start) {\n            this.loopPreview.start = { original: loop.loopBeginAngle };\n        }\n        loop.setLoopBeginAngle(radians);\n        this.drawAll();\n    };\n    RDDraw.prototype.commitLoopStart = function (value) {\n        var loop = this.currentLoop();\n        if (!loop) {\n            this.finalizeLoopPreview(\"start\");\n            return;\n        }\n        var preview = this.loopPreview;\n        var radians = this.degToRad(value);\n        if ((preview === null || preview === void 0 ? void 0 : preview.loopId) === loop.id && preview.start) {\n            var original = preview.start.original;\n            if (Math.abs(original - radians) < 1e-6) {\n                this.finalizeLoopPreview(\"start\");\n                this.drawAll();\n                return;\n            }\n            loop.setLoopBeginAngle(original);\n            this.finalizeLoopPreview(\"start\");\n        }\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoopBeginAngle(loop, radians));\n        this.drawAll();\n    };\n    RDDraw.prototype.previewLoopEnd = function (value) {\n        var loop = this.currentLoop();\n        if (!loop) {\n            return;\n        }\n        var radians = this.degToRad(value);\n        if (!this.loopPreview || this.loopPreview.loopId !== loop.id) {\n            this.loopPreview = { loopId: loop.id, end: { original: loop.loopEndAngle } };\n        }\n        else if (!this.loopPreview.end) {\n            this.loopPreview.end = { original: loop.loopEndAngle };\n        }\n        loop.setLoopEndAngle(radians);\n        this.drawAll();\n    };\n    RDDraw.prototype.commitLoopEnd = function (value) {\n        var loop = this.currentLoop();\n        if (!loop) {\n            this.finalizeLoopPreview(\"end\");\n            return;\n        }\n        var preview = this.loopPreview;\n        var radians = this.degToRad(value);\n        if ((preview === null || preview === void 0 ? void 0 : preview.loopId) === loop.id && preview.end) {\n            var original = preview.end.original;\n            if (Math.abs(original - radians) < 1e-6) {\n                this.finalizeLoopPreview(\"end\");\n                this.drawAll();\n                return;\n            }\n            loop.setLoopEndAngle(original);\n            this.finalizeLoopPreview(\"end\");\n        }\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoopEndAngle(loop, radians));\n        this.drawAll();\n    };\n    RDDraw.prototype.adjustLoop = function (property, step) {\n        this.resetLoopPreview();\n        var loop = this.currentLoop();\n        if (!loop) {\n            return;\n        }\n        if (property === \"radius\") {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeScale(loop, step));\n        }\n        else if (property === \"start\") {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeArcAngle(loop, this.degToRad(step)));\n        }\n        else if (property === \"end\") {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeArcEndAngle(loop, this.degToRad(step)));\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.handleLoopAction = function (action) {\n        this.resetLoopPreview();\n        var loop = this.currentLoop();\n        if (!loop) {\n            return;\n        }\n        switch (action) {\n            case \"full\":\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoopAngles(loop, 0, Math.PI * 2));\n                break;\n            case \"gap60\": {\n                var start = this.degToRad(-30);\n                var end = this.degToRad(30);\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoopAngles(loop, start, end));\n                break;\n            }\n            case \"gap180\": {\n                var start = this.degToRad(-90);\n                var end = this.degToRad(90);\n                this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoopAngles(loop, start, end));\n                break;\n            }\n            default:\n                return;\n        }\n        this.drawAll();\n    };\n    RDDraw.prototype.degToRad = function (value) {\n        return (value * Math.PI) / 180;\n    };\n    RDDraw.prototype.radToDeg = function (value) {\n        return (value * 180) / Math.PI;\n    };\n    RDDraw.prototype.normalizeDegrees = function (value) {\n        var result = value % 360;\n        if (result < 0) {\n            result += 360;\n        }\n        return result;\n    };\n    RDDraw.prototype.formatDegrees = function (value) {\n        return \"\".concat(Math.round(value), \"\\u00B0\");\n    };\n    RDDraw.prototype.arcLengthDegrees = function (loop) {\n        var diff = loop.loopEndAngle - loop.loopBeginAngle;\n        if (diff <= 0) {\n            diff += 2 * Math.PI;\n        }\n        return this.radToDeg(diff);\n    };\n    RDDraw.prototype.resetLoopPreview = function (exceptLoopId) {\n        var preview = this.loopPreview;\n        if (!preview) {\n            return;\n        }\n        if (exceptLoopId && preview.loopId === exceptLoopId) {\n            return;\n        }\n        var element = this.repository.getElement(preview.loopId);\n        if (element && (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(element)) {\n            if (preview.radius) {\n                element.setRadius(preview.radius.original);\n            }\n            if (preview.start) {\n                element.setLoopBeginAngle(preview.start.original);\n            }\n            if (preview.end) {\n                element.setLoopEndAngle(preview.end.original);\n            }\n        }\n        this.loopPreview = undefined;\n    };\n    RDDraw.prototype.finalizeLoopPreview = function (part) {\n        var preview = this.loopPreview;\n        if (!preview) {\n            return;\n        }\n        if (part === \"radius\") {\n            delete preview.radius;\n        }\n        else if (part === \"start\") {\n            delete preview.start;\n        }\n        else {\n            delete preview.end;\n        }\n        if (!preview.radius && !preview.start && !preview.end) {\n            this.loopPreview = undefined;\n        }\n    };\n    RDDraw.prototype.putLine = function (point, isReverse) {\n        var current = this.repository.currentElement();\n        var sub = this.repository.currentSubElement();\n        if (point) {\n            sub = current;\n            current = point;\n        }\n        if (!current) {\n            return;\n        }\n        if (!sub) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(current) && (0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(sub)) {\n            if (current.x == sub.x && current.y == sub.y) {\n                return;\n            }\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            line.origin = sub;\n            line.to = current;\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.repository.select(current);\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(current) && (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(sub)) {\n            if (current.origin.x == sub.origin.x &&\n                current.origin.y == sub.origin.y) {\n                return;\n            }\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            line.between(current, sub);\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(current) && (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(sub)) {\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            line.origin = current;\n            if (isReverse) {\n                sub.addLineTo(line);\n            }\n            else {\n                sub.addLineOrigin(line);\n            }\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(current) && (0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(sub)) {\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            line.origin = sub;\n            current.addLineTo(line);\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(current) && (0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(sub)) {\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            if (isReverse) {\n                line.origin = sub.to;\n            }\n            else {\n                line.origin = sub.origin;\n            }\n            line.to = current;\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(current) && (0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(sub)) {\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            if (isReverse) {\n                line.to = current.to;\n            }\n            else {\n                line.to = current.origin;\n            }\n            line.origin = sub;\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(current) && (0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(sub)) {\n            var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n            if (isReverse) {\n                line.to = current.to;\n            }\n            else {\n                line.to = current.origin;\n            }\n            line.origin = sub.to;\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(line));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.copy = function () {\n        var elem = this.repository.currentElement();\n        if (elem == undefined) {\n            return;\n        }\n        var copied = elem.copy();\n        copied.move(new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0.1, 0.1));\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(copied)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLine(copied));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(copied)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetLoop(copied));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_MyString__WEBPACK_IMPORTED_MODULE_3__.isString)(copied)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetString(copied));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(copied)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetVertex(copied));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.rotation = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Rotation(elem, (2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Rotation(elem, (2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.antiRotation = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Rotation(elem, -(2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Rotation(elem, -(2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.allowToggle = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ArrowToggle(elem));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ArrowToggle(elem));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeSelect = function () {\n        this.repository.changeSelect();\n        this.drawAll();\n        return;\n    };\n    RDDraw.prototype.changeType = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeType(elem));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            return;\n        }\n    };\n    RDDraw.prototype.changeArcAngle = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"changeArcAngle..\");\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeArcAngle(elem, (2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeArcAngleMinus = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeArcAngle(elem, -(2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeArcEndAngle = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeArcEndAngle(elem, (2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeArcEndAngleMinus = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeArcEndAngle(elem, -(2 * Math.PI) / 72));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeScale = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeScale(elem, 1.0));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeScale(elem, 1.0));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeScaleDown = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeScale(elem, -1.0));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeScale(elem, -1.0));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.changeStyle = function () {\n        var elem = this.repository.currentElement();\n        if (!elem) {\n            return;\n        }\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_4__.isVector)(elem)) {\n            return;\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeStyle(elem));\n            this.drawAll();\n            return;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_2__.isLoop)(elem)) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.ChangeStyle(elem));\n            this.drawAll();\n            return;\n        }\n    };\n    RDDraw.prototype.activeLines = function () {\n        var selectedLines = this.repository\n            .getSelectedElements()\n            .filter(function (elem) { return (0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(elem); });\n        if (selectedLines.length > 0) {\n            return selectedLines;\n        }\n        var current = this.repository.currentElement();\n        if (current && (0,_Core_Line__WEBPACK_IMPORTED_MODULE_1__.isLine)(current)) {\n            return [current];\n        }\n        return [];\n    };\n    RDDraw.prototype.rotateArrow = function (delta) {\n        var lines = this.activeLines();\n        if (lines.length === 0) {\n            return;\n        }\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.RotateArrow(lines, delta));\n        this.drawAll();\n    };\n    RDDraw.prototype.resetArrowRotation = function () {\n        var lines = this.activeLines();\n        if (lines.length === 0) {\n            return;\n        }\n        this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.SetArrowRotation(lines, 0));\n        this.drawAll();\n    };\n    RDDraw.prototype.delete = function () {\n        var selected = this.repository.getSelectedElements();\n        if (selected.length === 0) {\n            return;\n        }\n        if (selected.length === 1) {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.Delete(selected[0]));\n        }\n        else {\n            this.repository.doCommand(new _RepositoryCommand__WEBPACK_IMPORTED_MODULE_8__.DeleteGroup(selected));\n        }\n        this.repository.clearSelectMode();\n        this.drawAll();\n    };\n    RDDraw.prototype.select = function (point) {\n        this.selectAt(point, false);\n    };\n    RDDraw.prototype.subSelect = function (point) {\n        this.selectAt(point, true);\n    };\n    RDDraw.prototype.undo = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"undo\");\n        this.repository.undo();\n        this.drawAll();\n    };\n    RDDraw.prototype.redo = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"redo\");\n        this.repository.redo();\n        this.drawAll();\n    };\n    return RDDraw;\n}());\n\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/RDDraw.ts?");

/***/ }),

/***/ "./src/UI/RDRepository.ts":
/*!********************************!*\
  !*** ./src/UI/RDRepository.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RDRepository\": () => (/* binding */ RDRepository)\n/* harmony export */ });\n/* harmony import */ var _Core_Line__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/Line */ \"./src/Core/Line.ts\");\n/* harmony import */ var _Core_Loop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Loop */ \"./src/Core/Loop.ts\");\n/* harmony import */ var _Core_MyString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/MyString */ \"./src/Core/MyString.ts\");\n/* harmony import */ var _Core_Vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Vector */ \"./src/Core/Vector.ts\");\n/* harmony import */ var _Core_Group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Group */ \"./src/Core/Group.ts\");\n/* harmony import */ var _looger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../looger */ \"./src/looger.ts\");\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\n\n\n\n/**\n * The repository of the drawing.\n * It has a list of elements, and it can save and load.\n * It can also get the current element.\n * It can also get all the vertex, loop, and line.\n * It can also get the current element.\n * It can also get the current sub element.\n * It can also set the current element.\n */\nvar RDRepository = /** @class */ (function () {\n    function RDRepository() {\n        this.vertexList = [];\n        this.loopList = [];\n        this.lineList = [];\n        this.currentIndex = undefined;\n        this.currentSubIndex = undefined;\n        this.elements = [];\n        this.selectedIds = new Set();\n        this.idCount = 0;\n        this.history = [];\n        this.historyHead = 0; // 次に書き込むべき位置を指す\n    }\n    RDRepository.prototype.save = function () {\n        var saveData = {};\n        saveData[\"elements\"] = this.elements.map(function (e) { return e.save(); });\n        return JSON.stringify(saveData);\n    };\n    RDRepository.prototype.load = function (saveData) {\n        var saveJson = JSON.parse(saveData);\n        this.idCount = 0;\n        this.currentIndex = 0;\n        this.currentSubIndex = 0;\n        this.selectedIds.clear();\n        this.elements = this.loadElements(saveJson[\"elements\"]);\n        this.idCount = Math.max.apply(Math, this.elements.map(function (e) { return Math.floor(Number.parseFloat(e.id)); }));\n    };\n    RDRepository.prototype.loadElements = function (saveJsonElements) {\n        return saveJsonElements.flatMap(function (e) {\n            var json = JSON.parse(e);\n            var shape = json[\"shape\"];\n            if (!shape) {\n                return undefined;\n            }\n            switch (shape) {\n                case \"Line\":\n                    return (0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.makeLine)(json);\n                case \"Loop\":\n                    return (0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.makeLoop)(json);\n                case \"Point\":\n                    return (0,_Core_Vector__WEBPACK_IMPORTED_MODULE_3__.makeVector)(json);\n                case \"String\":\n                    return (0,_Core_MyString__WEBPACK_IMPORTED_MODULE_2__.makeMyString)(json);\n            }\n        }).flatMap(function (e) { return e !== undefined ? [e] : []; }).flat();\n    };\n    RDRepository.prototype.getElement = function (id) {\n        return this.elements.find(function (elem) {\n            return elem.id == id;\n        });\n    };\n    RDRepository.prototype.setCurrentElement = function (elem, additive) {\n        if (additive === void 0) { additive = false; }\n        var index = this.elements.findIndex(function (e) { return e.id === elem.id; });\n        if (index === -1) {\n            return;\n        }\n        this.currentIndex = index;\n        if (!additive) {\n            this.selectedIds.clear();\n        }\n        this.selectedIds.add(elem.id);\n    };\n    RDRepository.prototype.setSubCurrentElement = function (elem) {\n        this.currentSubIndex = this.elements.findIndex(function (e) { return e.id === elem.id; });\n    };\n    RDRepository.prototype.currentElement = function () {\n        // loggerVer(\"currentElement:length:\"+this.elements.length)\n        // loggerVer(\"currentIndex:\"+this.currentIndex)\n        if (this.currentIndex != undefined &&\n            this.currentIndex < this.elements.length) {\n            return this.elements[this.currentIndex];\n        }\n        return undefined;\n    };\n    RDRepository.prototype.currentSubElement = function () {\n        if (this.currentSubIndex != undefined &&\n            this.currentSubIndex < this.elements.length) {\n            return this.elements[this.currentSubIndex];\n        }\n        return undefined;\n    };\n    RDRepository.prototype.getAllVertex = function () {\n        return this.vertexList;\n    };\n    RDRepository.prototype.getAllLoop = function () {\n        return this.loopList;\n    };\n    RDRepository.prototype.getAllLine = function () {\n        return this.lineList;\n    };\n    RDRepository.prototype.getAllElements = function () {\n        return this.elements;\n    };\n    RDRepository.prototype.getSelectedElements = function () {\n        var _this = this;\n        if (this.selectedIds.size === 0) {\n            return [];\n        }\n        return this.elements.filter(function (elem) { return _this.selectedIds.has(elem.id); });\n    };\n    RDRepository.prototype.isSelected = function (elem) {\n        return this.selectedIds.has(elem.id);\n    };\n    RDRepository.prototype.deleteCurrentEelemnt = function () {\n        if (this.currentIndex == undefined) {\n            return;\n        }\n        var currentElem = this.currentElement();\n        if (!currentElem) {\n            return;\n        }\n        var nextCurrentIndex = this.currentIndex - 1;\n        if (nextCurrentIndex < 0) {\n            nextCurrentIndex = 0;\n        }\n        this.elements.splice(this.currentIndex, 1);\n        this.currentIndex = nextCurrentIndex;\n    };\n    RDRepository.prototype.doCommand = function (command) {\n        this.history[this.historyHead++] = command;\n        this.history.splice(this.historyHead); // headから先の枝を切る\n        command.action(this);\n    };\n    RDRepository.prototype.nextElem = function () {\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"nextElem\");\n        if (this.currentIndex == undefined) {\n            if (this.elements.length == 0) {\n                (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"nextElem return\");\n                return;\n            }\n            this.currentIndex = -1;\n        }\n        this.currentIndex = this.currentIndex + 1;\n        if (this.currentIndex >= this.elements.length) {\n            this.currentIndex = 0;\n        }\n        (0,_looger__WEBPACK_IMPORTED_MODULE_5__.loggerVer)(\"currentIndex\" + this.currentIndex);\n    };\n    RDRepository.prototype.nextSubElem = function () {\n        if (this.currentSubIndex == undefined) {\n            if (this.elements.length == 0) {\n                return;\n            }\n            this.currentSubIndex = -1;\n        }\n        this.currentSubIndex = this.currentSubIndex + 1;\n        if (this.currentSubIndex >= this.elements.length) {\n            this.currentSubIndex = 0;\n        }\n    };\n    RDRepository.prototype.preElem = function () {\n        if (this.currentIndex == undefined) {\n            if (this.elements.length == 0) {\n                return;\n            }\n            this.currentIndex = +1;\n        }\n        this.currentIndex = this.currentIndex - 1;\n        if (this.currentIndex < 0) {\n            this.currentIndex =\n                this.elements.length != 0 ? this.elements.length - 1 : 0;\n        }\n    };\n    RDRepository.prototype.preSubElem = function () {\n        if (this.currentSubIndex == undefined) {\n            if (this.elements.length == 0) {\n                return;\n            }\n            this.currentSubIndex = +1;\n        }\n        this.currentSubIndex = this.currentSubIndex - 1;\n        if (this.currentSubIndex < 0) {\n            this.currentSubIndex =\n                this.elements.length != 0 ? this.elements.length - 1 : 0;\n        }\n    };\n    RDRepository.prototype.findMostNearElements = function (point, elements, tolerance) {\n        if (tolerance === void 0) { tolerance = 2; }\n        var sorted = __spreadArray([], elements, true).map(function (elem) { return ({ elem: elem, distance: elem.formalDistance(point) }); })\n            .filter(function (_a) {\n            var distance = _a.distance;\n            return Number.isFinite(distance);\n        })\n            .sort(function (a, b) { return a.distance - b.distance; });\n        if (sorted.length === 0) {\n            return [];\n        }\n        var minDistance = sorted[0].distance;\n        if (!Number.isFinite(minDistance) || minDistance > tolerance) {\n            return [];\n        }\n        var targetDistance = minDistance;\n        return sorted\n            .filter(function (_a) {\n            var distance = _a.distance;\n            return Math.abs(distance - targetDistance) < 1e-6;\n        })\n            .map(function (_a) {\n            var elem = _a.elem;\n            return elem;\n        });\n    };\n    RDRepository.prototype.select = function (point) {\n        var _a;\n        var elem = this.findElement(point, (_a = this.currentElement()) === null || _a === void 0 ? void 0 : _a.id);\n        if (elem) {\n            this.setCurrentElement(elem);\n        }\n    };\n    RDRepository.prototype.subSelect = function (point) {\n        var _a;\n        var elem = this.findElement(point, (_a = this.currentSubElement()) === null || _a === void 0 ? void 0 : _a.id);\n        if (elem) {\n            this.setSubCurrentElement(elem);\n        }\n    };\n    RDRepository.prototype.findElement = function (point, current_id, tolerance) {\n        if (tolerance === void 0) { tolerance = 2; }\n        var nearElements = this.findMostNearElements(point, this.elements, tolerance);\n        if (nearElements.length === 0) {\n            return;\n        }\n        function next(elems, index) {\n            if (index === undefined || index < 0) {\n                return elems[0];\n            }\n            if (index >= elems.length) {\n                return elems[0];\n            }\n            return elems[index];\n        }\n        var indexOfCurrent = nearElements.findIndex(function (e) { return e.id === current_id; });\n        var nearElement = next(nearElements, indexOfCurrent);\n        return nearElement;\n    };\n    RDRepository.prototype.findNearest = function (point, tolerance) {\n        if (tolerance === void 0) { tolerance = 2; }\n        var nearElements = this.findMostNearElements(point, this.elements, tolerance);\n        if (nearElements.length === 0) {\n            return undefined;\n        }\n        return nearElements[0];\n    };\n    RDRepository.prototype.findAllNear = function (point, tolerance) {\n        if (tolerance === void 0) { tolerance = 2; }\n        return this.findMostNearElements(point, this.elements, tolerance);\n    };\n    RDRepository.prototype.clearSelectMode = function () {\n        this.currentIndex = undefined;\n        this.currentSubIndex = undefined;\n        this.selectedIds.clear();\n    };\n    RDRepository.prototype.changeSelect = function () {\n        var currentIndex = this.currentIndex;\n        this.currentIndex = this.currentSubIndex;\n        this.currentSubIndex = currentIndex;\n    };\n    RDRepository.prototype.undo = function () {\n        if (this.historyHead <= 0) {\n            return;\n        }\n        this.history[--this.historyHead].unaction(this);\n    };\n    RDRepository.prototype.redo = function () {\n        if (this.historyHead >= this.history.length) {\n            return;\n        }\n        this.history[this.historyHead++].action(this);\n    };\n    RDRepository.prototype.setSelection = function (elements) {\n        var _this = this;\n        this.selectedIds.clear();\n        elements.forEach(function (elem) { return _this.selectedIds.add(elem.id); });\n        if (elements.length > 0) {\n            this.setCurrentElement(elements[elements.length - 1], true);\n        }\n        else {\n            this.currentIndex = undefined;\n        }\n    };\n    RDRepository.prototype.toggleSelection = function (elem) {\n        var _a;\n        if (this.selectedIds.has(elem.id)) {\n            this.selectedIds.delete(elem.id);\n            if (((_a = this.currentElement()) === null || _a === void 0 ? void 0 : _a.id) === elem.id) {\n                var remaining = this.getSelectedElements();\n                if (remaining.length > 0) {\n                    this.setCurrentElement(remaining[remaining.length - 1], true);\n                }\n                else {\n                    this.currentIndex = undefined;\n                }\n            }\n        }\n        else {\n            this.selectedIds.add(elem.id);\n            this.setCurrentElement(elem, true);\n        }\n    };\n    RDRepository.prototype.selectInRect = function (rect, additive) {\n        var _this = this;\n        var normalized = this.normalizeRect(rect);\n        var matching = this.elements.filter(function (elem) { return _this.intersectsRect(elem, normalized); });\n        if (!additive) {\n            this.selectedIds.clear();\n            if (matching.length === 0) {\n                this.currentIndex = undefined;\n            }\n        }\n        matching.forEach(function (elem) { return _this.selectedIds.add(elem.id); });\n        if (matching.length > 0) {\n            this.setCurrentElement(matching[matching.length - 1], true);\n        }\n    };\n    RDRepository.prototype.normalizeRect = function (rect) {\n        var x1 = Math.min(rect.x1, rect.x2);\n        var y1 = Math.min(rect.y1, rect.y2);\n        var x2 = Math.max(rect.x1, rect.x2);\n        var y2 = Math.max(rect.y1, rect.y2);\n        return { x1: x1, y1: y1, x2: x2, y2: y2 };\n    };\n    RDRepository.prototype.intersectsRect = function (elem, rect) {\n        var box = this.elementBounds(elem);\n        return !(box.x2 < rect.x1 || box.x1 > rect.x2 || box.y2 < rect.y1 || box.y1 > rect.y2);\n    };\n    RDRepository.prototype.elementBounds = function (elem) {\n        var _this = this;\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_3__.isVector)(elem)) {\n            return { x1: elem.x, y1: elem.y, x2: elem.x, y2: elem.y };\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(elem)) {\n            var x1 = Math.min(elem.origin.x, elem.to.x);\n            var y1 = Math.min(elem.origin.y, elem.to.y);\n            var x2 = Math.max(elem.origin.x, elem.to.x);\n            var y2 = Math.max(elem.origin.y, elem.to.y);\n            return { x1: x1, y1: y1, x2: x2, y2: y2 };\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(elem)) {\n            return {\n                x1: elem.origin.x - elem.radius,\n                y1: elem.origin.y - elem.radius,\n                x2: elem.origin.x + elem.radius,\n                y2: elem.origin.y + elem.radius,\n            };\n        }\n        if ((0,_Core_MyString__WEBPACK_IMPORTED_MODULE_2__.isString)(elem)) {\n            return { x1: elem.origin.x, y1: elem.origin.y, x2: elem.origin.x, y2: elem.origin.y };\n        }\n        if ((0,_Core_Group__WEBPACK_IMPORTED_MODULE_4__.isGroup)(elem)) {\n            if (elem.elements.length === 0) {\n                return { x1: 0, y1: 0, x2: 0, y2: 0 };\n            }\n            return elem.elements\n                .map(function (child) { return _this.elementBounds(child); })\n                .reduce(function (acc, box) { return ({\n                x1: Math.min(acc.x1, box.x1),\n                y1: Math.min(acc.y1, box.y1),\n                x2: Math.max(acc.x2, box.x2),\n                y2: Math.max(acc.y2, box.y2),\n            }); });\n        }\n        return { x1: -Infinity, y1: -Infinity, x2: Infinity, y2: Infinity };\n    };\n    return RDRepository;\n}());\n\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/RDRepository.ts?");

/***/ }),

/***/ "./src/UI/RepositoryCommand.ts":
/*!*************************************!*\
  !*** ./src/UI/RepositoryCommand.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArrowToggle\": () => (/* binding */ ArrowToggle),\n/* harmony export */   \"ChangeArcAngle\": () => (/* binding */ ChangeArcAngle),\n/* harmony export */   \"ChangeArcEndAngle\": () => (/* binding */ ChangeArcEndAngle),\n/* harmony export */   \"ChangeScale\": () => (/* binding */ ChangeScale),\n/* harmony export */   \"ChangeStyle\": () => (/* binding */ ChangeStyle),\n/* harmony export */   \"ChangeType\": () => (/* binding */ ChangeType),\n/* harmony export */   \"Delete\": () => (/* binding */ Delete),\n/* harmony export */   \"DeleteGroup\": () => (/* binding */ DeleteGroup),\n/* harmony export */   \"Fill\": () => (/* binding */ Fill),\n/* harmony export */   \"Move\": () => (/* binding */ Move),\n/* harmony export */   \"MoveAbsolute\": () => (/* binding */ MoveAbsolute),\n/* harmony export */   \"MoveGroup\": () => (/* binding */ MoveGroup),\n/* harmony export */   \"RotateArrow\": () => (/* binding */ RotateArrow),\n/* harmony export */   \"Rotation\": () => (/* binding */ Rotation),\n/* harmony export */   \"SetArrowRotation\": () => (/* binding */ SetArrowRotation),\n/* harmony export */   \"SetLine\": () => (/* binding */ SetLine),\n/* harmony export */   \"SetLineControlPoint\": () => (/* binding */ SetLineControlPoint),\n/* harmony export */   \"SetLineEndpoint\": () => (/* binding */ SetLineEndpoint),\n/* harmony export */   \"SetLoop\": () => (/* binding */ SetLoop),\n/* harmony export */   \"SetLoopAngles\": () => (/* binding */ SetLoopAngles),\n/* harmony export */   \"SetLoopBeginAngle\": () => (/* binding */ SetLoopBeginAngle),\n/* harmony export */   \"SetLoopEndAngle\": () => (/* binding */ SetLoopEndAngle),\n/* harmony export */   \"SetLoopRadius\": () => (/* binding */ SetLoopRadius),\n/* harmony export */   \"SetString\": () => (/* binding */ SetString),\n/* harmony export */   \"SetVertex\": () => (/* binding */ SetVertex)\n/* harmony export */ });\n/* harmony import */ var _Core_Line__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/Line */ \"./src/Core/Line.ts\");\n/* harmony import */ var _Core_Loop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Loop */ \"./src/Core/Loop.ts\");\n/* harmony import */ var _Core_Vector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Vector */ \"./src/Core/Vector.ts\");\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\nvar SetVertex = /** @class */ (function () {\n    function SetVertex(vertex) {\n        this.vertex = vertex;\n        this.copyVertex = vertex.copy();\n    }\n    SetVertex.prototype.action = function (repo) {\n        repo.vertexList.push(this.copyVertex);\n        repo.elements.push(this.copyVertex);\n        repo.currentIndex = repo.elements.length - 1;\n    };\n    SetVertex.prototype.unaction = function (repo) {\n        repo.vertexList.splice(repo.vertexList.indexOf(this.copyVertex), 1);\n        repo.elements.splice(repo.elements.indexOf(this.copyVertex), 1);\n    };\n    return SetVertex;\n}());\n\nvar SetLine = /** @class */ (function () {\n    function SetLine(line) {\n        this.line = line;\n        this.copyLine = line.copy();\n    }\n    SetLine.prototype.action = function (repo) {\n        repo.lineList.push(this.copyLine);\n        repo.elements.push(this.copyLine);\n        repo.currentIndex = repo.elements.length - 1;\n    };\n    SetLine.prototype.unaction = function (repo) {\n        repo.lineList.splice(repo.lineList.indexOf(this.copyLine), 1);\n        repo.elements.splice(repo.elements.indexOf(this.copyLine), 1);\n    };\n    return SetLine;\n}());\n\nvar SetString = /** @class */ (function () {\n    function SetString(str) {\n        this.mystring = str;\n        this.copyMyString = str.copy();\n    }\n    SetString.prototype.action = function (repo) {\n        repo.elements.push(this.copyMyString);\n        repo.currentIndex = repo.elements.length - 1;\n    };\n    SetString.prototype.unaction = function (repo) {\n        repo.elements.splice(repo.elements.indexOf(this.copyMyString), 1);\n    };\n    return SetString;\n}());\n\nvar SetLoop = /** @class */ (function () {\n    function SetLoop(loop) {\n        this.loop = loop;\n        this.copyLoop = loop.copy();\n    }\n    SetLoop.prototype.action = function (repo) {\n        repo.loopList.push(this.copyLoop);\n        repo.elements.push(this.copyLoop);\n        repo.currentIndex = repo.elements.length - 1;\n    };\n    SetLoop.prototype.unaction = function (repo) {\n        repo.loopList.splice(repo.loopList.indexOf(this.copyLoop), 1);\n        repo.elements.splice(repo.elements.indexOf(this.copyLoop), 1);\n    };\n    return SetLoop;\n}());\n\nvar Delete = /** @class */ (function () {\n    function Delete(target) {\n        this.target = target;\n    }\n    Delete.prototype.action = function (repo) {\n        repo.elements.splice(repo.elements.indexOf(this.target), 1);\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_2__.isVector)(this.target)) {\n            repo.vertexList.splice(repo.vertexList.indexOf(this.target), 1);\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(this.target)) {\n            repo.loopList.splice(repo.loopList.indexOf(this.target), 1);\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(this.target)) {\n            repo.lineList.splice(repo.lineList.indexOf(this.target), 1);\n        }\n    };\n    Delete.prototype.unaction = function (repo) {\n        repo.elements.push(this.target);\n        if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_2__.isVector)(this.target)) {\n            repo.vertexList.push(this.target);\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(this.target)) {\n            repo.loopList.push(this.target);\n        }\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(this.target)) {\n            repo.lineList.push(this.target);\n        }\n    };\n    return Delete;\n}());\n\nvar Move = /** @class */ (function () {\n    function Move(target, delta) {\n        this.target = target;\n        this.delta = delta;\n        this.before = JSON.parse(JSON.stringify(target)); // 深いコピー\n        Object.defineProperties(this.before, Object.getOwnPropertyDescriptors(target));\n    }\n    Move.prototype.action = function (repo) {\n        this.target.move(this.delta);\n    };\n    Move.prototype.unaction = function (repo) {\n        // this.target.move(this.delta.multi(-1.0));  // 誤差が蓄積する恐れ\n        Object.assign(this.target, this.before);\n    };\n    return Move;\n}());\n\nvar MoveAbsolute = /** @class */ (function () {\n    function MoveAbsolute(target, location) {\n        this.target = target;\n        this.location = location;\n        this.before = JSON.parse(JSON.stringify(target)); // 深いコピー\n        Object.defineProperties(this.before, Object.getOwnPropertyDescriptors(target));\n    }\n    MoveAbsolute.prototype.action = function (repo) {\n        this.target.moveAbsolute(this.location);\n    };\n    MoveAbsolute.prototype.unaction = function (repo) {\n        Object.assign(this.target, this.before);\n    };\n    return MoveAbsolute;\n}());\n\nvar Rotation = /** @class */ (function () {\n    function Rotation(target, delta) {\n        this.target = target;\n        this.delta = delta;\n        this.before = JSON.parse(JSON.stringify(target)); // 深いコピー\n        Object.defineProperties(this.before, Object.getOwnPropertyDescriptors(target));\n    }\n    Rotation.prototype.action = function (repo) {\n        this.target.rotation(this.delta);\n    };\n    Rotation.prototype.unaction = function (repo) {\n        // this.target.rotation(-this.delta);\n        Object.assign(this.target, this.before);\n    };\n    return Rotation;\n}());\n\nvar ChangeScale = /** @class */ (function () {\n    function ChangeScale(target, delta) {\n        this.target = target;\n        this.delta = delta;\n        this.before = JSON.parse(JSON.stringify(target)); // 深いコピー\n        Object.defineProperties(this.before, Object.getOwnPropertyDescriptors(target));\n    }\n    ChangeScale.prototype.action = function (repo) {\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(this.target)) {\n            this.target.to = this.target.to.add(this.target.directionUnit().multi(this.delta));\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(this.target)) {\n            this.target.setRadius(this.target.radius + this.delta * 1);\n        }\n    };\n    ChangeScale.prototype.unaction = function (repo) {\n        // if (isLine(this.target)) {\n        //   this.target.to = this.target.to.minus(this.target.directionUnit().multi(this.delta));\n        // }\n        // if (isLoop(this.target)) {\n        //   this.target.setRadius(this.target.radius - this.delta * 1);\n        // }\n        Object.assign(this.target, this.before);\n    };\n    return ChangeScale;\n}());\n\nvar ChangeArcAngle = /** @class */ (function () {\n    function ChangeArcAngle(target, delta) {\n        this.target = target;\n        this.delta = delta;\n        this.angleBefore = target.loopBeginAngle;\n    }\n    ChangeArcAngle.prototype.action = function (repo) {\n        this.target.setLoopBeginAngle(this.target.loopBeginAngle + this.delta);\n    };\n    ChangeArcAngle.prototype.unaction = function (repo) {\n        // this.target.setLoopBeginAngle(this.target.loopBeginAngle - this.delta);\n        this.target.setLoopBeginAngle(this.angleBefore);\n    };\n    return ChangeArcAngle;\n}());\n\nvar ChangeArcEndAngle = /** @class */ (function () {\n    function ChangeArcEndAngle(target, delta) {\n        this.target = target;\n        this.delta = delta;\n        this.angleBefore = target.loopEndAngle;\n    }\n    ChangeArcEndAngle.prototype.action = function (repo) {\n        this.target.setLoopEndAngle(this.target.loopEndAngle + this.delta);\n    };\n    ChangeArcEndAngle.prototype.unaction = function (repo) {\n        // this.target.setLoopEndAngle(this.target.loopEndAngle - this.delta);\n        this.target.setLoopEndAngle(this.angleBefore);\n    };\n    return ChangeArcEndAngle;\n}());\n\nvar Fill = /** @class */ (function () {\n    function Fill(target) {\n        this.target = target;\n    }\n    Fill.prototype.action = function (repo) {\n        this.target.fill = !this.target.fill;\n    };\n    Fill.prototype.unaction = function (repo) {\n        this.action(repo);\n    };\n    return Fill;\n}());\n\nvar ArrowToggle = /** @class */ (function () {\n    function ArrowToggle(target) {\n        this.target = target;\n    }\n    ArrowToggle.prototype.action = function (repo) {\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(this.target)) {\n            this.target.allow = !this.target.allow;\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(this.target)) {\n            this.target.allow = !this.target.allow;\n        }\n    };\n    ArrowToggle.prototype.unaction = function (repo) {\n        this.action(repo);\n    };\n    return ArrowToggle;\n}());\n\nvar ChangeType = /** @class */ (function () {\n    function ChangeType(target) {\n        this.target = target;\n    }\n    ChangeType.prototype.action = function (repo) {\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(this.target)) {\n            this.target.toggle();\n        }\n    };\n    ChangeType.prototype.unaction = function (repo) {\n        this.action(repo);\n    };\n    return ChangeType;\n}());\n\nvar RotateArrow = /** @class */ (function () {\n    function RotateArrow(targets, delta) {\n        this.targets = targets;\n        this.before = targets.map(function (line) { var _a; return (_a = line.arrowRotation) !== null && _a !== void 0 ? _a : 0; });\n        this.delta = delta;\n    }\n    RotateArrow.prototype.action = function (repo) {\n        var _this = this;\n        this.targets.forEach(function (line, index) {\n            line.arrowRotation = _this.before[index] + _this.delta;\n        });\n    };\n    RotateArrow.prototype.unaction = function (repo) {\n        var _this = this;\n        this.targets.forEach(function (line, index) {\n            line.arrowRotation = _this.before[index];\n        });\n    };\n    return RotateArrow;\n}());\n\nvar SetArrowRotation = /** @class */ (function () {\n    function SetArrowRotation(targets, after) {\n        this.targets = targets;\n        this.before = targets.map(function (line) { var _a; return (_a = line.arrowRotation) !== null && _a !== void 0 ? _a : 0; });\n        if (Array.isArray(after)) {\n            this.after = after;\n        }\n        else {\n            this.after = targets.map(function () { return after; });\n        }\n    }\n    SetArrowRotation.prototype.action = function (repo) {\n        var _this = this;\n        this.targets.forEach(function (line, index) {\n            line.arrowRotation = _this.after[index];\n        });\n    };\n    SetArrowRotation.prototype.unaction = function (repo) {\n        var _this = this;\n        this.targets.forEach(function (line, index) {\n            line.arrowRotation = _this.before[index];\n        });\n    };\n    return SetArrowRotation;\n}());\n\nvar ChangeStyle = /** @class */ (function () {\n    function ChangeStyle(target) {\n        this.styleBefore = \"normal\";\n        this.styleAfter = \"normal\";\n        this.target = target;\n        this.styleBefore = target.style;\n        if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(target)) {\n            if (this.styleBefore == \"normal\") {\n                this.styleAfter = \"dash\";\n            }\n            if (this.styleBefore == \"dash\") {\n                this.styleAfter = \"wave\";\n            }\n            if (this.styleBefore == \"wave\") {\n                this.styleAfter = \"coil\";\n            }\n            if (this.styleBefore == \"coil\") {\n                this.styleAfter = \"double\";\n            }\n            if (this.styleBefore == \"double\") {\n                this.styleAfter = \"normal\";\n            }\n        }\n        if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(target)) {\n            if (this.styleBefore == \"normal\") {\n                this.styleAfter = \"dash\";\n            }\n            if (this.styleBefore == \"dash\") {\n                this.styleAfter = \"wave\";\n            }\n            if (this.styleBefore == \"wave\") {\n                this.styleAfter = \"coil\";\n            }\n            if (this.styleBefore == \"coil\") {\n                this.styleAfter = \"normal\";\n            }\n        }\n    }\n    ChangeStyle.prototype.action = function (repo) {\n        this.target.style = this.styleAfter;\n    };\n    ChangeStyle.prototype.unaction = function (repo) {\n        this.target.style = this.styleBefore;\n    };\n    return ChangeStyle;\n}());\n\nvar MoveGroup = /** @class */ (function () {\n    function MoveGroup(targets, delta) {\n        this.before = [];\n        this.targets = targets;\n        this.delta = delta;\n        this.before = targets.map(function (target) {\n            var cloned = JSON.parse(JSON.stringify(target));\n            Object.defineProperties(cloned, Object.getOwnPropertyDescriptors(target));\n            return cloned;\n        });\n    }\n    MoveGroup.prototype.action = function (repo) {\n        var _this = this;\n        this.targets.forEach(function (target) {\n            target.move(_this.delta);\n        });\n    };\n    MoveGroup.prototype.unaction = function (repo) {\n        var _this = this;\n        this.targets.forEach(function (target, index) {\n            Object.assign(target, _this.before[index]);\n        });\n    };\n    return MoveGroup;\n}());\n\nvar DeleteGroup = /** @class */ (function () {\n    function DeleteGroup(targets) {\n        this.snapshots = [];\n        this.targets = targets;\n    }\n    DeleteGroup.prototype.action = function (repo) {\n        this.snapshots = this.targets\n            .map(function (target) { return ({ elem: target, index: repo.elements.indexOf(target) }); })\n            .filter(function (snapshot) { return snapshot.index !== -1; })\n            .sort(function (a, b) { return a.index - b.index; });\n        __spreadArray([], this.snapshots, true).sort(function (a, b) { return b.index - a.index; })\n            .forEach(function (_a) {\n            var elem = _a.elem, index = _a.index;\n            repo.elements.splice(index, 1);\n            if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_2__.isVector)(elem)) {\n                var idx = repo.vertexList.indexOf(elem);\n                if (idx !== -1) {\n                    repo.vertexList.splice(idx, 1);\n                }\n            }\n            if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(elem)) {\n                var idx = repo.loopList.indexOf(elem);\n                if (idx !== -1) {\n                    repo.loopList.splice(idx, 1);\n                }\n            }\n            if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(elem)) {\n                var idx = repo.lineList.indexOf(elem);\n                if (idx !== -1) {\n                    repo.lineList.splice(idx, 1);\n                }\n            }\n        });\n    };\n    DeleteGroup.prototype.unaction = function (repo) {\n        this.snapshots\n            .sort(function (a, b) { return a.index - b.index; })\n            .forEach(function (_a) {\n            var elem = _a.elem, index = _a.index;\n            repo.elements.splice(index, 0, elem);\n            if ((0,_Core_Vector__WEBPACK_IMPORTED_MODULE_2__.isVector)(elem) && !repo.vertexList.includes(elem)) {\n                repo.vertexList.push(elem);\n            }\n            if ((0,_Core_Loop__WEBPACK_IMPORTED_MODULE_1__.isLoop)(elem) && !repo.loopList.includes(elem)) {\n                repo.loopList.push(elem);\n            }\n            if ((0,_Core_Line__WEBPACK_IMPORTED_MODULE_0__.isLine)(elem) && !repo.lineList.includes(elem)) {\n                repo.lineList.push(elem);\n            }\n        });\n    };\n    return DeleteGroup;\n}());\n\nvar SetLoopRadius = /** @class */ (function () {\n    function SetLoopRadius(target, after) {\n        this.target = target;\n        this.before = target.radius;\n        this.after = after;\n    }\n    SetLoopRadius.prototype.action = function (repo) {\n        this.target.setRadius(this.after);\n    };\n    SetLoopRadius.prototype.unaction = function (repo) {\n        this.target.setRadius(this.before);\n    };\n    return SetLoopRadius;\n}());\n\nvar SetLoopBeginAngle = /** @class */ (function () {\n    function SetLoopBeginAngle(target, after) {\n        this.target = target;\n        this.before = target.loopBeginAngle;\n        this.after = after;\n    }\n    SetLoopBeginAngle.prototype.action = function (repo) {\n        this.target.setLoopBeginAngle(this.after);\n    };\n    SetLoopBeginAngle.prototype.unaction = function (repo) {\n        this.target.setLoopBeginAngle(this.before);\n    };\n    return SetLoopBeginAngle;\n}());\n\nvar SetLoopEndAngle = /** @class */ (function () {\n    function SetLoopEndAngle(target, after) {\n        this.target = target;\n        this.before = target.loopEndAngle;\n        this.after = after;\n    }\n    SetLoopEndAngle.prototype.action = function (repo) {\n        this.target.setLoopEndAngle(this.after);\n    };\n    SetLoopEndAngle.prototype.unaction = function (repo) {\n        this.target.setLoopEndAngle(this.before);\n    };\n    return SetLoopEndAngle;\n}());\n\nvar SetLoopAngles = /** @class */ (function () {\n    function SetLoopAngles(target, afterStart, afterEnd) {\n        this.target = target;\n        this.beforeStart = target.loopBeginAngle;\n        this.beforeEnd = target.loopEndAngle;\n        this.afterStart = afterStart;\n        this.afterEnd = afterEnd;\n    }\n    SetLoopAngles.prototype.action = function (repo) {\n        this.target.setLoopBeginAngle(this.afterStart);\n        this.target.setLoopEndAngle(this.afterEnd);\n    };\n    SetLoopAngles.prototype.unaction = function (repo) {\n        this.target.setLoopBeginAngle(this.beforeStart);\n        this.target.setLoopEndAngle(this.beforeEnd);\n    };\n    return SetLoopAngles;\n}());\n\nvar SetLineEndpoint = /** @class */ (function () {\n    function SetLineEndpoint(line, endpoint, after) {\n        this.line = line;\n        this.endpoint = endpoint;\n        this.before = line[endpoint].copy();\n        this.after = after.copy();\n    }\n    SetLineEndpoint.prototype.action = function (repo) {\n        this.line[this.endpoint].moveAbsolute(this.after);\n    };\n    SetLineEndpoint.prototype.unaction = function (repo) {\n        this.line[this.endpoint].moveAbsolute(this.before);\n    };\n    return SetLineEndpoint;\n}());\n\nvar SetLineControlPoint = /** @class */ (function () {\n    function SetLineControlPoint(line, after) {\n        this.line = line;\n        this.before = line.control ? line.control.copy() : null;\n        this.after = after ? after.copy() : null;\n    }\n    SetLineControlPoint.prototype.action = function (repo) {\n        this.line.control = this.after ? this.after.copy() : null;\n    };\n    SetLineControlPoint.prototype.unaction = function (repo) {\n        this.line.control = this.before ? this.before.copy() : null;\n    };\n    return SetLineControlPoint;\n}());\n\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/RepositoryCommand.ts?");

/***/ }),

/***/ "./src/UI/UIColor.ts":
/*!***************************!*\
  !*** ./src/UI/UIColor.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getColor\": () => (/* binding */ getColor)\n/* harmony export */ });\nfunction getColor(color) {\n    if (color == \"normal\") {\n        return \"rgb(0,0,0)\";\n    }\n    if (color == \"select\") {\n        return \"rgb(255,0,0)\";\n    }\n    if (color == \"sub\") {\n        return \"rgb(0,255,0)\";\n    }\n    return \"rgb(0,0,0)\";\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/UIColor.ts?");

/***/ }),

/***/ "./src/UI/draw.ts":
/*!************************!*\
  !*** ./src/UI/draw.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"draw\": () => (/* binding */ draw),\n/* harmony export */   \"drawAllow\": () => (/* binding */ drawAllow),\n/* harmony export */   \"drawCoilLine\": () => (/* binding */ drawCoilLine),\n/* harmony export */   \"drawCoilLoop\": () => (/* binding */ drawCoilLoop),\n/* harmony export */   \"drawDoubleLine\": () => (/* binding */ drawDoubleLine),\n/* harmony export */   \"drawLine\": () => (/* binding */ drawLine),\n/* harmony export */   \"drawLoop\": () => (/* binding */ drawLoop),\n/* harmony export */   \"drawNormalLine\": () => (/* binding */ drawNormalLine),\n/* harmony export */   \"drawPoint\": () => (/* binding */ drawPoint),\n/* harmony export */   \"drawWaveLine\": () => (/* binding */ drawWaveLine),\n/* harmony export */   \"drawWaveLoop\": () => (/* binding */ drawWaveLoop)\n/* harmony export */ });\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Config */ \"./src/Config.ts\");\n/* harmony import */ var _Core_Group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Group */ \"./src/Core/Group.ts\");\n/* harmony import */ var _Core_Line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Line */ \"./src/Core/Line.ts\");\n/* harmony import */ var _Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/TextPosition */ \"./src/Core/TextPosition.ts\");\n/* harmony import */ var _Core_Vector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Vector */ \"./src/Core/Vector.ts\");\n\n\n\n\n\nvar CURVED_LINE_SEGMENTS = 48;\nvar EPSILON = 1e-6;\nfunction lineDirectionAt(line, t) {\n    var tangent = line.tangentAt(t);\n    if (tangent.length() < EPSILON) {\n        tangent = line.direction();\n    }\n    var length = tangent.length();\n    if (length < EPSILON) {\n        return new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(1, 0);\n    }\n    return tangent.multi(1 / length);\n}\nfunction lineNormalAt(line, t) {\n    var direction = lineDirectionAt(line, t);\n    return direction.rotation(Math.PI / 2);\n}\nfunction sampleLinePoints(line, segments) {\n    if (segments === void 0) { segments = line.control ? CURVED_LINE_SEGMENTS : 1; }\n    var count = Math.max(1, segments);\n    var points = [];\n    for (var i = 0; i <= count; i++) {\n        var t = count === 0 ? 0 : i / count;\n        points.push(line.pointAt(t));\n    }\n    return points;\n}\nfunction computeCumulativeLengths(points) {\n    var cumulative = new Array(points.length).fill(0);\n    var total = 0;\n    for (var i = 1; i < points.length; i++) {\n        var segmentLength = points[i].minus(points[i - 1]).length();\n        total += segmentLength;\n        cumulative[i] = total;\n    }\n    return { cumulative: cumulative, total: total };\n}\nfunction sampleOffsetLinePoints(line, offset, segments) {\n    if (segments === void 0) { segments = line.control ? CURVED_LINE_SEGMENTS : 1; }\n    var count = Math.max(1, segments);\n    var points = [];\n    for (var i = 0; i <= count; i++) {\n        var t = count === 0 ? 0 : i / count;\n        var basePoint = line.pointAt(t);\n        var normal = lineNormalAt(line, t);\n        var offsetVector = normal.multi(offset);\n        points.push(basePoint.add(offsetVector));\n    }\n    return points;\n}\nfunction tracePolyline(drawContext, points, style) {\n    if (points.length < 2) {\n        return;\n    }\n    drawContext.moveTo(points[0].x, points[0].y);\n    for (var i = 1; i < points.length; i++) {\n        drawContext.lineTo(points[i].x, points[i].y, style);\n    }\n}\nfunction lineMidDirection(line) {\n    return lineDirectionAt(line, 0.5);\n}\nfunction sampleCoilPoints(line) {\n    var segmentLength = 1.0;\n    var aspect = 0.9;\n    var amplitude = 0.5;\n    var segments = line.control ? CURVED_LINE_SEGMENTS * 4 : Math.max(32, Math.ceil(line.length() * 18));\n    var basePoints = sampleLinePoints(line, segments);\n    var _a = computeCumulativeLengths(basePoints), cumulative = _a.cumulative, total = _a.total;\n    if (total < segmentLength) {\n        return basePoints;\n    }\n    var turns = Math.max(1, Math.floor(total / segmentLength));\n    var coilPoints = [];\n    for (var i = 0; i < basePoints.length; i++) {\n        var s = cumulative[i];\n        var tNorm = segments === 0 ? 0 : i / segments;\n        var tangent = lineDirectionAt(line, tNorm);\n        var normal = lineNormalAt(line, tNorm);\n        var phase = (s / total) * (turns - 0.5) * 2 * Math.PI;\n        var u = aspect * amplitude * Math.cos(Math.PI - phase) - aspect * amplitude * ((2 * s) / total - 1);\n        var v = amplitude * Math.sin(Math.PI - phase);\n        coilPoints.push(basePoints[i]\n            .add(tangent.multi(u))\n            .add(normal.multi(v)));\n    }\n    return coilPoints;\n}\n/**\n * draw is the main function to draw an element.\n * @param drawContext the draw context\n * @param elem the element to draw\n * @param exportType the export type\n * @param color the color\n */\nfunction draw(drawContext, elem, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    if (elem.shape == \"Line\") {\n        drawLine(drawContext, elem, exportType, color);\n        return;\n    }\n    if (elem.shape == \"Loop\") {\n        drawLoop(drawContext, elem, exportType, color);\n        return;\n    }\n    if (elem.shape == \"Point\") {\n        drawPoint(drawContext, elem, exportType, color);\n        return;\n    }\n    if (elem.shape == \"String\") {\n        drawText(drawContext, elem, exportType, color);\n        return;\n    }\n    if ((0,_Core_Group__WEBPACK_IMPORTED_MODULE_1__.isGroup)(elem)) {\n        elem.elements.forEach(function (elem) {\n            draw(drawContext, elem, exportType, color);\n        });\n        return;\n    }\n}\n/**\n * draw DoubleLine\n */\nfunction drawDoubleLine(drawContext, line, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    var offset = 0.1;\n    var segments = line.control ? CURVED_LINE_SEGMENTS : 1;\n    var outer = sampleOffsetLinePoints(line, offset, segments);\n    var inner = sampleOffsetLinePoints(line, -offset, segments);\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    tracePolyline(drawContext, outer, line.style);\n    drawContext.stroke();\n    drawContext.closePath();\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    tracePolyline(drawContext, inner, line.style);\n    drawContext.stroke();\n    drawContext.closePath();\n    if (line.allow) {\n        drawAllow(drawContext, line, exportType);\n    }\n    if (line.label) {\n        var diff = 1.0 + line.labelDiff;\n        var midDirection = lineMidDirection(line);\n        var labelNormal = midDirection.rotation(Math.PI / 2);\n        var pos = line.center().add(labelNormal.multi(diff));\n        var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(line.label, pos, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n        drawContext.fillText(line.label, position.x, position.y);\n    }\n    drawContext.closePath();\n    // drawContext.setLineDash([])\n}\n/**\n * draw a line\n */\nfunction drawNormalLine(drawContext, line, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    var linestyle = line.style;\n    var segments = line.control ? CURVED_LINE_SEGMENTS : 1;\n    var points = sampleLinePoints(line, segments);\n    tracePolyline(drawContext, points, linestyle);\n    drawContext.stroke();\n    if (line.allow) {\n        drawAllow(drawContext, line, exportType);\n    }\n    if (line.label) {\n        var diff = 1.0 + line.labelDiff;\n        var midDirection = lineMidDirection(line);\n        var labelNormal = midDirection.rotation(Math.PI / 2);\n        var pos = line.center().add(labelNormal.multi(diff));\n        var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(line.label, pos, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n        drawContext.fillText(line.label, position.x, position.y);\n    }\n    drawContext.closePath();\n    // drawContext.setLineDash([])\n}\nfunction drawWaveLine(drawContext, line, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    if (!line.control) {\n        drawContext.beginPath();\n        var origin_1 = line.origin;\n        var unitVec = line.directionUnit();\n        var perpVec = unitVec.rotation(Math.PI / 2);\n        drawContext.setStrokeColor(color);\n        var lineStyle = \"normal\";\n        if (line.style == \"dash\") {\n            lineStyle = \"dash\";\n        }\n        drawContext.moveTo(origin_1.x, origin_1.y);\n        for (var l = 0; l < line.length(); l += 0.1) {\n            var offset = Math.sin(l * 5) * 3 / 15;\n            var x = origin_1.x + unitVec.x * l + perpVec.x * offset;\n            var y = origin_1.y + unitVec.y * l + perpVec.y * offset;\n            drawContext.lineTo(x, y, lineStyle);\n            drawContext.moveTo(x, y);\n            drawContext.stroke();\n        }\n        if (line.allow) {\n            drawAllow(drawContext, line, exportType);\n        }\n        if (line.label) {\n            var diff = 1.0 + line.labelDiff;\n            var midDirection = lineMidDirection(line);\n            var pos = line.center().add(midDirection.rotation(Math.PI / 2).multi(diff));\n            var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(line.label, pos, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n            drawContext.fillText(line.label, position.x, position.y);\n        }\n        drawContext.closePath();\n        return;\n    }\n    var baseSegments = CURVED_LINE_SEGMENTS * 3;\n    var basePoints = sampleLinePoints(line, baseSegments);\n    var _a = computeCumulativeLengths(basePoints), cumulative = _a.cumulative, total = _a.total;\n    var amplitude = 0.2;\n    var frequency = 5;\n    var wavePoints = basePoints.map(function (point, index) {\n        if (total < EPSILON) {\n            return point.copy();\n        }\n        var t = baseSegments === 0 ? 0 : index / baseSegments;\n        var normal = lineNormalAt(line, t);\n        var offset = Math.sin(cumulative[index] * frequency) * amplitude;\n        return point.add(normal.multi(offset));\n    });\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    tracePolyline(drawContext, wavePoints, \"normal\");\n    drawContext.stroke();\n    if (line.allow) {\n        drawAllow(drawContext, line, exportType);\n    }\n    if (line.label) {\n        var diff = 1.0 + line.labelDiff;\n        var midDirection = lineMidDirection(line);\n        var pos = line.center().add(midDirection.rotation(Math.PI / 2).multi(diff));\n        var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(line.label, pos, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n        drawContext.fillText(line.label, position.x, position.y);\n    }\n    drawContext.closePath();\n}\n/**\n * draw a coil line\n */\nfunction drawCoilLine(drawContext, line, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    var coilPoints = sampleCoilPoints(line);\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    tracePolyline(drawContext, coilPoints, \"normal\");\n    drawContext.stroke();\n    if (line.allow) {\n        drawAllow(drawContext, line, exportType);\n    }\n    if (line.label) {\n        var diff = 1.0 + line.labelDiff;\n        var midDirection = lineMidDirection(line);\n        var pos = line.center().add(midDirection.rotation(Math.PI / 2).multi(diff));\n        var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(line.label, pos, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n        drawContext.fillText(line.label, position.x, position.y);\n    }\n    drawContext.closePath();\n}\n/**\n * draw line\n */\nfunction drawLine(drawContext, line, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    if (line.style == \"wave\") {\n        ///MARK: not good\n        if (exportType == \"canvas\" || exportType == \"svg\") {\n            drawWaveLine(drawContext, line, exportType, color);\n            return;\n        }\n    }\n    if (line.style == \"coil\") {\n        ///MARK: not good\n        if (exportType == \"canvas\" || exportType == \"svg\") {\n            drawCoilLine(drawContext, line, exportType, color);\n            return;\n        }\n    }\n    if (line.style == \"double\") {\n        drawDoubleLine(drawContext, line, exportType, color);\n        return;\n    }\n    drawNormalLine(drawContext, line, exportType, color);\n}\n/**\n * draw allow\n */\nfunction drawAllow(drawContext, line, exportType, color) {\n    var _a;\n    if (color === void 0) { color = \"normal\"; }\n    var center = line.pointAt(0.5);\n    var baseDirection = lineMidDirection(line);\n    var direction = baseDirection.rotation((_a = line.arrowRotation) !== null && _a !== void 0 ? _a : 0);\n    var forward = direction.multi(0.4);\n    var normal = direction.rotation(Math.PI / 2).multi(0.35);\n    var tip = center.add(forward);\n    var tail = center.minus(forward);\n    var tail1 = tail.add(normal);\n    var tail2 = tail.minus(normal);\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    drawContext.moveTo(tip.x, tip.y);\n    drawContext.lineTo(tail1.x, tail1.y, \"normal\");\n    drawContext.lineTo(tail2.x, tail2.y, \"normal\");\n    drawContext.closePath();\n    // context.arc(100, 10, 50, 0, Math.PI * 2)\n    drawContext.stroke();\n}\n/**\n * draw wave loop\n */\nfunction drawWaveLoop(drawContext, loop, exportType, color) {\n    // drawContext.beginPath()\n    if (color === void 0) { color = \"normal\"; }\n    var origin = loop.origin;\n    var radius = loop.radius;\n    var beginAngle = loop.loopBeginAngle;\n    var endAngle = loop.loopEndAngle;\n    var segmentNum = 360 * (radius / 2);\n    var segmentAngleWith = (Math.PI * 2) / segmentNum;\n    var snakeNum = 12;\n    var amplitude = 0.1 * radius;\n    if (beginAngle < 0) {\n        beginAngle += Math.PI * 2;\n    }\n    if (beginAngle > Math.PI * 2) {\n        beginAngle -= Math.PI * 2;\n    }\n    if (endAngle < 0) {\n        endAngle += Math.PI * 2;\n    }\n    if (endAngle > Math.PI * 2) {\n        endAngle -= Math.PI * 2;\n    }\n    if (beginAngle > endAngle) {\n        endAngle += Math.PI * 2;\n    }\n    for (var angle = beginAngle; angle < endAngle; angle = angle + segmentAngleWith) {\n        var unitVec = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(1, 0).rotation(angle);\n        var unitVec2 = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(1, 0).rotation(angle + segmentAngleWith);\n        var snake = amplitude * Math.sin(angle * snakeNum);\n        // let perpVec = unitVec.rotation(Math.PI / 2)\n        var startPoint = origin.add(unitVec.multi(radius + snake));\n        var endPoint = origin.add(unitVec2.multi(radius + snake));\n        var line = new _Core_Line__WEBPACK_IMPORTED_MODULE_2__.Line();\n        line.style = \"normal\";\n        line.origin = startPoint;\n        line.to = endPoint;\n        line.allow = false;\n        drawLine(drawContext, line, exportType, color);\n    }\n    // drawContext.setStrokeColor(color)\n    // // context.arc(100, 10, 50, 0, Math.PI * 2)\n    // let lineSyle: LineStyle = \"normal\"\n    // if (line.style == \"dash\") {\n    //     lineSyle = \"dash\"\n    // }\n    // drawContext.moveTo(origin.x, origin.y)\n    // for (let l = 0; l < line.length(); l += 0.1) {\n    //     let x = origin.x + unitVec.x * l + perpVec.x * Math.sin(l * 5) * 3 / 15\n    //     let y = origin.y + unitVec.y * l + perpVec.y * Math.sin(l * 5) * 3 / 15\n    //     loggerVer(`draw ${l} ${x} ${y}`)\n    //     drawContext.lineTo(x, y, lineSyle)\n    //     drawContext.moveTo(x, y)\n    //     drawContext.stroke()\n    // }\n    // if (line.allow) {\n    //     drawAllow(line, exportType)\n    // }\n    // drawContext.closePath()\n    // drawContext.setLineDash([])\n}\n/**\n * draw coil loop\n */\nfunction drawCoilLoop(drawContext, loop, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    var beginAngle = loop.loopBeginAngle;\n    var endAngle = loop.loopEndAngle;\n    if (beginAngle < 0) {\n        beginAngle += Math.PI * 2;\n    }\n    if (beginAngle > Math.PI * 2) {\n        beginAngle -= Math.PI * 2;\n    }\n    if (endAngle < 0) {\n        endAngle += Math.PI * 2;\n    }\n    if (endAngle > Math.PI * 2) {\n        endAngle -= Math.PI * 2;\n    }\n    if (beginAngle > endAngle) {\n        endAngle += Math.PI * 2;\n    }\n    drawContext.setStrokeColor(color);\n    var lineSyle = \"normal\";\n    if (loop.style == \"dash\") {\n        lineSyle = \"dash\";\n    }\n    var pathLength = loop.radius * (endAngle - beginAngle);\n    // 経路とその接線ベクトルの媒介変数表示\n    // 要素の種類によって決まる関数\n    var x;\n    var y;\n    var dx;\n    var dy;\n    {\n        // 弧長sから中心角angleへ\n        var angle_1 = function (s) {\n            return s / loop.radius + beginAngle;\n        };\n        x = function (s) {\n            return loop.radius * Math.cos(angle_1(s)) + loop.origin.x;\n        };\n        y = function (s) {\n            return loop.radius * Math.sin(angle_1(s)) + loop.origin.y;\n        };\n        dx = function (s) {\n            return Math.cos(angle_1(s) + Math.PI / 2);\n        };\n        dy = function (s) {\n            return Math.sin(angle_1(s) + Math.PI / 2);\n        };\n    }\n    // 線のスタイルとpathLengthによって決まる関数\n    var u;\n    var v;\n    {\n        // コイル線のパラメータ\n        var segmentLength = 1.0;\n        var aspect_1 = 0.9;\n        var amplitude_1 = 0.5;\n        // 経路の長さが1波長(segmentLength)よりも短い場合、線の装飾をしない。\n        if (pathLength < segmentLength) {\n            u = v = function (s) {\n                return 0;\n            };\n        }\n        else {\n            // コイルの巻き数\n            var n_1 = Math.floor(pathLength / segmentLength);\n            // 弧長sから位相tへ\n            var t_1 = function (s) {\n                return (s / pathLength) * (n_1 - 1 / 2) * 2 * Math.PI;\n            };\n            u = function (s) {\n                // 第2項は両端を閉じるための補正。経路の中間点で0。\n                return (aspect_1 * amplitude_1 * Math.cos(Math.PI - t_1(s)) -\n                    aspect_1 * amplitude_1 * ((2 * s) / pathLength - 1));\n            };\n            v = function (s) {\n                return amplitude_1 * Math.sin(Math.PI - t_1(s));\n            };\n        }\n    }\n    var resolution = 32; // 1巻きのコイルを32本の線分で描く程度\n    var ds, begin, end;\n    var f;\n    var g;\n    f = function (s) {\n        return x(s) + (u(s) * dx(s) - v(s) * dy(s));\n    };\n    g = function (s) {\n        return y(s) + (u(s) * dy(s) + v(s) * dx(s));\n    };\n    ds = (2 * Math.PI * 0.5) /*amplitude*/ / resolution;\n    begin = 0;\n    end = pathLength;\n    drawContext.beginPath();\n    {\n        var x_1, y_1, s = void 0;\n        (x_1 = f(begin)), (y_1 = g(begin));\n        drawContext.moveTo(x_1, y_1);\n        for (s = begin; s < end; s += ds) {\n            (x_1 = f(s)), (y_1 = g(s));\n            drawContext.lineTo(x_1, y_1, lineSyle);\n            drawContext.moveTo(x_1, y_1);\n        }\n        (x_1 = f(end)), (y_1 = g(end));\n        drawContext.lineTo(x_1, y_1, lineSyle);\n    }\n    drawContext.stroke();\n    drawContext.closePath();\n    /*\n      // 基準線\n      f = x\n      g = y\n      drawContext.beginPath()\n      {\n          let x: number, y: number, s: number\n  \n          x = f(begin), y = g(begin)\n          drawContext.moveTo(x, y)\n          for (s = begin; s < end; s += ds) {\n              x = f(s), y = g(s)\n              drawContext.lineTo(x, y, lineSyle)\n              drawContext.moveTo(x, y)\n          }\n          x = f(end), y = g(end)\n          drawContext.lineTo(x, y, lineSyle)\n      }\n      drawContext.stroke()\n      drawContext.closePath()\n  */\n}\n/**\n * draw a loop\n */\nfunction drawLoop(drawContext, loop, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    if (loop.style == \"wave\") {\n        ///MARK: not good\n        if (exportType == \"canvas\" || exportType == \"svg\") {\n            drawWaveLoop(drawContext, loop, exportType, color);\n            return;\n        }\n    }\n    if (loop.style == \"coil\") {\n        ///MARK: not good\n        if (exportType == \"canvas\" || exportType == \"svg\") {\n            drawCoilLoop(drawContext, loop, exportType, color);\n            return;\n        }\n    }\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    drawContext.setFillColor(color);\n    var lineStyle = \"normal\";\n    if (loop.style == \"dash\") {\n        lineStyle = \"dash\";\n    }\n    if (loop.style == \"wave\") {\n        lineStyle = \"wave\";\n    }\n    if (loop.style == \"coil\") {\n        lineStyle = \"coil\";\n    }\n    drawContext.arc(loop.origin.x, loop.origin.y, loop.radius, loop.loopBeginAngle, loop.loopEndAngle, lineStyle, loop.fill);\n    drawContext.stroke();\n    if (loop.allow) {\n        drawLoopAllow(drawContext, loop, exportType, color);\n    }\n    if (loop.label) {\n        var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(loop.label, loop.origin, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n        drawContext.fillText(loop.label, position.x, position.y);\n    }\n    if (loop.labels) {\n        loop.labels.forEach(function (lab) {\n            var diff = 0.5 + lab.diff;\n            var pos = loop.origin.add(new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(0, -1).multi(loop.radius + diff).rotation(lab.angle));\n            var position = (0,_Core_TextPosition__WEBPACK_IMPORTED_MODULE_3__.textPosition)(lab.label, pos, _Config__WEBPACK_IMPORTED_MODULE_0__.config);\n            drawContext.fillText(lab.label, position.x, position.y);\n        });\n    }\n    drawContext.closePath();\n    // drawContext.setLineDash([])\n}\nfunction drawLoopAllow(drawContext, loop, exportType, color) {\n    var diff = loop.loopEndAngle - loop.loopBeginAngle;\n    if (diff <= 0) {\n        diff += Math.PI * 2;\n    }\n    if (diff < 0.01) {\n        return;\n    }\n    var mid = loop.loopBeginAngle + diff / 2;\n    var radial = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(Math.cos(mid), Math.sin(mid));\n    var tangentUnit = new _Core_Vector__WEBPACK_IMPORTED_MODULE_4__.Vector(-Math.sin(mid), Math.cos(mid));\n    var anchor = loop.origin.add(radial.multi(loop.radius));\n    var arrowLength = Math.max(0.35, Math.min(loop.radius * 0.4, 1.0));\n    var arrowWidth = arrowLength * 0.8;\n    var front = anchor.add(tangentUnit.multi(arrowLength));\n    var perp = tangentUnit.rotation(Math.PI / 2).multi(arrowWidth);\n    var tail1 = anchor.minus(perp);\n    var tail2 = anchor.add(perp);\n    drawContext.beginPath();\n    drawContext.setStrokeColor(color);\n    drawContext.moveTo(front.x, front.y);\n    drawContext.lineTo(tail1.x, tail1.y, \"normal\");\n    drawContext.lineTo(tail2.x, tail2.y, \"normal\");\n    drawContext.closePath();\n    drawContext.stroke();\n}\n/**\n * draw point\n */\nfunction drawPoint(drawContext, point, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    var x = point.x;\n    var y = point.y;\n    drawContext.beginPath();\n    drawContext.setFillColor(color);\n    // loggerVer(`drawPoint ${x}_${y}`);\n    drawContext.fillRect(x - 1 / 15, y - 1 / 15, 3 / 15, 3 / 15);\n    drawContext.closePath();\n}\nfunction drawText(drawContext, str, exportType, color) {\n    if (color === void 0) { color = \"normal\"; }\n    var x = str.origin.x;\n    var y = str.origin.y;\n    drawContext.beginPath();\n    drawContext.setFillColor(color);\n    drawContext.fillText(str.label, x, y);\n    // loggerVer(`drawText ${x}_${y}`);\n    drawContext.closePath();\n}\n// function drawVertex(loop: Vertex) {\n//     const scale = config.scale\n//     context.beginPath()\n//     context.arc(loop.origin.x * scale,\n//         loop.origin.y * scale,\n//         loop.radius * scale, 0, Math.PI * 2)\n//     context.stroke()\n//     if (loop.fill) {\n//         context.fill()\n//     }\n//     if (loop.label) {\n//         let position = textPosition(loop.label, loop.origin, config)\n//         context.fillText(loop.label, position.x * scale, position.y * scale)\n//     }\n//     if (loop.labels) {\n//         loop.labels.forEach((lab) => {\n//             const diff = 0.5 + lab.diff\n//             let pos = loop.origin.add(new Vector(0, -1).multi(loop.radius + diff).rotation(lab.angle))\n//             let position = textPosition(lab.label, pos, config)\n//             context.fillText(lab.label, position.x * scale, position.y * scale)\n//         })\n//     }\n// }\n\n\n//# sourceURL=webpack://rdfeyn/./src/UI/draw.ts?");

/***/ }),

/***/ "./src/looger.ts":
/*!***********************!*\
  !*** ./src/looger.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loggerOn\": () => (/* binding */ loggerOn),\n/* harmony export */   \"loggerVer\": () => (/* binding */ loggerVer)\n/* harmony export */ });\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Config */ \"./src/Config.ts\");\n\nfunction loggerVer(text) {\n    if (_Config__WEBPACK_IMPORTED_MODULE_0__.config.log == \"VER\") {\n        console.log(text);\n    }\n}\nfunction loggerOn(text) {\n    if (_Config__WEBPACK_IMPORTED_MODULE_0__.config.log == \"ON\" || _Config__WEBPACK_IMPORTED_MODULE_0__.config.log == \"VER\") {\n        console.log(text);\n    }\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/looger.ts?");

/***/ }),

/***/ "./src/quantumSketch.ts":
/*!******************************!*\
  !*** ./src/quantumSketch.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sample_sample__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sample/sample */ \"./src/sample/sample.ts\");\n/* harmony import */ var _UI_DrawContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UI/DrawContext */ \"./src/UI/DrawContext.ts\");\n/* harmony import */ var _UI_RDDraw__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UI/RDDraw */ \"./src/UI/RDDraw.ts\");\n// \"QuantumSketch  So Katagiri\"\n\n\n\nvar canvas = document.getElementById(\"canvas\");\nvar context_ = canvas.getContext(\"2d\");\nvar drawContext = new _UI_DrawContext__WEBPACK_IMPORTED_MODULE_1__.DrawContext(context_);\nvar h = new _UI_RDDraw__WEBPACK_IMPORTED_MODULE_2__.RDDraw(canvas, drawContext);\n// drawFourScalarVertex(drawContext)\n(0,_sample_sample__WEBPACK_IMPORTED_MODULE_0__.sample)(drawContext);\n\n\n//# sourceURL=webpack://rdfeyn/./src/quantumSketch.ts?");

/***/ }),

/***/ "./src/sample/sample.ts":
/*!******************************!*\
  !*** ./src/sample/sample.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clossLoop\": () => (/* binding */ clossLoop),\n/* harmony export */   \"clossLoop3\": () => (/* binding */ clossLoop3),\n/* harmony export */   \"draw2loop\": () => (/* binding */ draw2loop),\n/* harmony export */   \"drawFourScalarVertex\": () => (/* binding */ drawFourScalarVertex),\n/* harmony export */   \"sample\": () => (/* binding */ sample)\n/* harmony export */ });\n/* harmony import */ var _Core_Group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/Group */ \"./src/Core/Group.ts\");\n/* harmony import */ var _Core_Line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Line */ \"./src/Core/Line.ts\");\n/* harmony import */ var _Core_Loop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Loop */ \"./src/Core/Loop.ts\");\n/* harmony import */ var _Core_Vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Vector */ \"./src/Core/Vector.ts\");\n/* harmony import */ var _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Vertex */ \"./src/Core/Vertex.ts\");\n/* harmony import */ var _UI_draw__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../UI/draw */ \"./src/UI/draw.ts\");\n/* harmony import */ var _UI_DrawContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../UI/DrawContext */ \"./src/UI/DrawContext.ts\");\n\n\n\n\n\n\n\nfunction getContext() {\n    var canvas = document.getElementById(\"canvas\");\n    var context_ = canvas.getContext(\"2d\");\n    var drawContext = new _UI_DrawContext__WEBPACK_IMPORTED_MODULE_6__.DrawContext(context_);\n    return drawContext;\n}\n/// example\nfunction drawFourVertex(context) {\n    var exLine1 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var exLine2 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var exLine3 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var exLine4 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var vertex = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex();\n    var elems = [exLine1, exLine2, exLine3, exLine4, vertex];\n    exLine1.label = \"k1\";\n    exLine2.label = \"k2\";\n    exLine3.label = \"k3\";\n    exLine4.label = \"k4\";\n    exLine1.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(2, 2);\n    exLine2.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(10, 2);\n    exLine3.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(2, 10);\n    exLine4.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(10, 10);\n    vertex.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(6, 6);\n    vertex.addLineTo(exLine1);\n    vertex.addLineTo(exLine3);\n    vertex.addLineOrigin(exLine2);\n    vertex.addLineOrigin(exLine4);\n    elems.forEach(function (x) {\n        (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(context, x, \"canvas\");\n    });\n}\n/// example\nfunction draw2loop(context) {\n    var exLine1 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"k1\");\n    var exLine2 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"k2\");\n    var exLine3 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"k3\");\n    var exLine4 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"k4\");\n    var intLine = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"w\");\n    var loop = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n    var loop2 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n    var elems = [exLine1, exLine2, exLine3, exLine4, loop, loop2, intLine];\n    exLine1.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(2, 2);\n    exLine2.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(14, 2);\n    exLine3.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(2, 10);\n    exLine4.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(14, 10);\n    loop.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(6, 6);\n    loop2.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(10, 6);\n    loop.labels = [\n        { label: \"p1\", angle: 0, diff: 0 },\n        { label: \"p2\", angle: Math.PI, diff: 0 },\n        { label: \"p3\", angle: (Math.PI * 3) / 2, diff: 0.3 },\n    ];\n    loop2.labels = [\n        { label: \"q1\", angle: 0, diff: 0 },\n        { label: \"q2\", angle: Math.PI / 2, diff: 0 },\n        { label: \"q3\", angle: Math.PI, diff: 0 },\n    ];\n    loop.addLineTo(exLine1);\n    loop2.addLineOrigin(exLine2);\n    loop.addLineTo(exLine3);\n    loop2.addLineOrigin(exLine4);\n    intLine.between(loop2, loop);\n    elems.forEach(function (x) {\n        (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(context, x, \"canvas\");\n    });\n}\nfunction clossLoop3(drawContext) {\n    var v_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"normal\");\n    var n_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"dash\");\n    var boson_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"wave\");\n    var vertex = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex();\n    vertex.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(6, 6);\n    v_Line.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(0, 6);\n    n_Line.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(12, 6);\n    boson_Line.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(12, 0);\n    vertex.addLineTo(v_Line);\n    vertex.addLineOrigin(n_Line);\n    vertex.addLineOrigin(boson_Line);\n    var elems = [v_Line, n_Line, boson_Line, vertex];\n    elems.forEach(function (x) { return (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(drawContext, x, \"canvas\"); });\n}\nfunction clossLoop(drawContext) {\n    var list = [];\n    var vertex_L = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex(\"\", new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(3, 6));\n    var vertex_I_L = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex(\"\", new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(6, 6));\n    var vertex_I_R = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex(\"\", new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(9, 6));\n    var vertex_R = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex(\"\", new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(12, 6));\n    list.push(vertex_L, vertex_I_L, vertex_I_L, vertex_I_R, vertex_R);\n    var v_L_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"normal\");\n    var v_R_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"normal\");\n    var v_C_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"normal\");\n    var n_1_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"dash\");\n    var n_2_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"dash\");\n    var boson_L_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"wave\");\n    var boson_R_Line = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"\", \"wave\");\n    list.push(v_L_Line, v_R_Line, v_C_Line, n_1_Line, n_2_Line, boson_L_Line, boson_R_Line);\n    v_L_Line.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(0, 6);\n    vertex_L.addLineTo(v_L_Line);\n    vertex_L.addLineOrigin(n_1_Line);\n    vertex_I_L.addLineTo(n_1_Line);\n    vertex_I_L.addLineOrigin(v_C_Line);\n    vertex_I_R.addLineTo(v_C_Line);\n    vertex_I_R.addLineOrigin(n_2_Line);\n    vertex_R.addLineTo(n_2_Line);\n    vertex_R.addLineOrigin(v_R_Line);\n    v_R_Line.to = vertex_R.origin.add(new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(3, 0));\n    var loop = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n    loop.style = \"wave\";\n    loop.origin = v_C_Line.center();\n    loop.radius = v_C_Line.length() / 2 + v_L_Line.length();\n    loop.loopBeginAngle = 0;\n    loop.loopEndAngle = Math.PI;\n    list.push(loop);\n    vertex_I_L.addLineTo(boson_L_Line);\n    vertex_I_R.addLineOrigin(boson_R_Line);\n    boson_L_Line.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(0, 0);\n    boson_R_Line.to = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(16, 0);\n    return drawALl(drawContext, list);\n}\nfunction drawALl(drawContext, list) {\n    drawContext.setExportType(\"canvas\");\n    list.forEach(function (x) { return (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(drawContext, x, \"canvas\"); });\n    drawContext.setExportType(\"svg\");\n    drawContext.startExport();\n    list.forEach(function (x) { return (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(drawContext, x, \"svg\"); });\n    var result = drawContext.endExport();\n    console.log(result);\n    return result;\n}\n/// example\nfunction drawloop(n) {\n    var exLines = [];\n    for (var i = 0; i < 4; i++) {\n        exLines.push(new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line(\"k\" + i));\n    }\n}\n/// example\nfunction kakanzuTest(context) {\n    var loop00 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop(\"A\");\n    var loop01 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop(\"B\");\n    var loop10 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop(\"C\");\n    var loop11 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop(\"D\");\n    var line1 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var line2 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var line3 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var line4 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var elems = [loop00, loop01, loop10, loop11, line1, line2, line3, line4];\n    loop00.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(2, 2);\n    loop01.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(2, 10);\n    loop10.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(10, 2);\n    loop11.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(10, 10);\n    line1.between(loop00, loop01);\n    line2.between(loop01, loop11);\n    line3.between(loop00, loop10);\n    line4.between(loop10, loop11);\n    elems.forEach(function (x) {\n        (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(context, x, \"canvas\");\n    });\n}\nvar V;\n(function (V) {\n    V.zero = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(0, 0);\n    V.one = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(1, 1);\n    V.up = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(0, 1).multi(num); };\n    V.down = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(0, -1).multi(num); };\n    V.left = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(-1, 0).multi(num); };\n    V.right = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(1, 0).multi(num); };\n    V.upLeft = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(-1, 1).multi(num); };\n    V.upRight = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(1, 1).multi(num); };\n    V.downLeft = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(-1, -1).multi(num); };\n    V.downRight = function (num) { return new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(1, -1).multi(num); };\n})(V || (V = {}));\nfunction drawFourScalarVertex(context) {\n    var vertex = new _Core_Vertex__WEBPACK_IMPORTED_MODULE_4__.Vertex();\n    var line1 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var line2 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var line3 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var line4 = new _Core_Line__WEBPACK_IMPORTED_MODULE_1__.Line();\n    var elems = [vertex, line1, line2, line3, line4];\n    vertex.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(6, 6);\n    line1.origin = vertex.origin.add(V.upLeft(3));\n    line2.origin = vertex.origin.add(V.upRight(3));\n    line3.origin = vertex.origin.add(V.downLeft(3));\n    line4.origin = vertex.origin.add(V.downRight(3));\n    line1.to = vertex.origin;\n    line2.to = vertex.origin;\n    line3.to = vertex.origin;\n    line4.to = vertex.origin;\n    elems.forEach(function (x) {\n        (0,_UI_draw__WEBPACK_IMPORTED_MODULE_5__.draw)(context, x, \"canvas\");\n    });\n}\n// const context = getContext()\n// draw2loop()\n/**\n * ループの任意の角度から任意の角度までの線を引く\n */\nfunction loopInLoop() {\n    var loop1 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n    loop1.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(9, 6);\n    loop1.setLoopBeginAngle(2 * Math.PI / 3);\n    loop1.setLoopEndAngle(4 * Math.PI / 3);\n    loop1.radius = 4;\n    var loop2 = new _Core_Loop__WEBPACK_IMPORTED_MODULE_2__.Loop();\n    loop2.origin = new _Core_Vector__WEBPACK_IMPORTED_MODULE_3__.Vector(5, 6);\n    loop2.radius = 4;\n    var group = new _Core_Group__WEBPACK_IMPORTED_MODULE_0__.Group([loop1, loop2]);\n    return group;\n}\nfunction sample(context) {\n    drawALl(context, [loopInLoop()]);\n}\n\n\n//# sourceURL=webpack://rdfeyn/./src/sample/sample.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/quantumSketch.ts");
/******/ 	
/******/ })()
;